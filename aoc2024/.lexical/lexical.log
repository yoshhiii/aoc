09:29:41.209 [info] Application logger started at :nonode@nohost
09:29:42.686 [error] FATAL: Lexical is not compatible with Elixir 1.12.2

Lexical is compatible with the following versions of Elixir:

  >= 1.13.0
  >= 1.14.0
  >= 1.15.3
  >= 1.16.0
  >= 1.17.0
  >= 1.17.0-rc


FATAL: Lexical is not compatible with Erlang/OTP 24.2.1

Lexical is compatible with the following versions of Erlang/OTP:

  >= 24.3.4
  >= 25.0.0
  >= 26.0.2
  >= 27.0.0

22:21:44.052 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.119.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
22:21:44.052 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.118.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
22:21:44.052 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
22:21:44.052 [info] Application logger started at :nonode@nohost
22:21:44.994 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.1528.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
22:21:44.994 [info] Application runtime_tools started at :nonode@nohost
22:21:44.995 [info] Application erts started at :nonode@nohost
22:21:44.995 [info] Application lx_lexical_shared started at :nonode@nohost
22:21:44.995 [info] Application lx_lexical_test started at :nonode@nohost
22:21:44.996 [info] Child LXSnowflake.Generator of Supervisor #PID<0.1535.0> (Supervisor.Default) started
Pid: #PID<0.1536.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:44.996 [info] Application lx_snowflake started at :nonode@nohost
22:21:44.996 [info] Application lx_sourceror started at :nonode@nohost
22:21:44.997 [info] Application lx_common started at :nonode@nohost
22:21:44.997 [info] Application lx_elixir_sense started at :nonode@nohost
22:21:44.997 [info] Application jason started at :nonode@nohost
22:21:44.997 [info] Application logger_file_backend started at :nonode@nohost
22:21:44.997 [info] Application lx_path_glob started at :nonode@nohost
22:21:44.997 [info] Application lx_proto started at :nonode@nohost
22:21:44.997 [info] Application lx_protocol started at :nonode@nohost
22:21:45.012 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1549.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.015 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1550.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.015 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1551.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
22:21:45.015 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1552.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
22:21:45.015 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1553.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.015 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1554.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.015 [info] Application lx_server started at :nonode@nohost
22:21:45.031 [info] Starting project at uri file:///home/yoshi/source/aoc/aoc2024
22:21:45.044 [info] Child {LXical.Server.Project.Progress, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1556.0>
Start Call: LXical.Server.Project.Progress.start_link(%{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.048 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1557.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.059 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.1560.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
22:21:45.061 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.1561.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
22:21:45.064 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.1562.0>
Start Call: :net_kernel.start_link(%{name: :"manager-aoc2024-36933@127.0.0.1", supervisor: :net_sup_dynamic, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 2000
Type: :worker
22:21:45.064 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.1559.0>
Start Call: :erl_distribution.start_link(%{name: :"manager-aoc2024-36933@127.0.0.1", supervisor: :net_sup_dynamic, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
22:21:45.580 [info] Child {LXical.Server.Project.Node, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1558.0>
Start Call: LXical.Server.Project.Node.start_link(%{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.584 [info] Child {LXical.Server.Project.Diagnostics, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1570.0>
Start Call: LXical.Server.Project.Diagnostics.start_link(%{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.587 [info] Child {LXical.Server.Project.Intelligence, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1571.0>
Start Call: LXical.Server.Project.Intelligence.start_link(%{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.589 [info] Child LXical.Server.Project.SearchListener of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1572.0>
Start Call: LXical.Server.Project.SearchListener.start_link(%{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
22:21:45.590 [info] Lexical Initialized
22:21:45.590 [info] opened file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs
22:21:45.683 [info] Compiled aoc2024 in 98 ms
22:26:21.956 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "do/end block", filter_text: "do", insert_text_format: :snippet, sort_text: "0901_do/end block", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 18,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(65 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<53, 24>>...<<53, 26>>], text: "do\n  $0\nend", __struct__: LXical.Document.Edit}}]>]
22:27:06.824 [info] Completion for LxPos<<48, 11>>
22:27:07.262 [info] Completion for LxPos<<48, 13>>
22:27:07.538 [info] Local completions are [%{name: "ANSI", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "IO.ANSI", summary: "Functionality to render ANSI escape sequences."}, %{name: "Stream", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Struct, full_name: "IO.Stream", summary: "Defines an `IO.Stream` struct returned by `IO.stream/2` and `IO.binstream/2`."}, %{name: "StreamError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "IO.StreamError", summary: ""}, %{arity: 1, name: "__info__", type: :function, origin: "IO", spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", metadata: %{builtin: true}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Provides runtime information about functions, macros, and other information\ndefined by the module.", visibility: :public, parens?: true, argument_names: ["atom"]}, %{arity: 1, name: "binread", type: :function, origin: "IO", spec: "@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads from the IO `device`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["line_or_chars"]}, %{arity: 2, name: "binread", type: :function, origin: "IO", spec: "@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads from the IO `device`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["device", "line_or_chars"]}, %{arity: 0, name: "binstream", type: :function, origin: "IO", spec: "@spec binstream() :: Enumerable.t(binary())", metadata: %{app: :elixir, since: "1.12.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns a raw, line-based `IO.Stream` on `:stdio`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: []}, %{arity: 1, name: "binstream", type: :function, origin: "IO", spec: "@spec binstream(device(), :line | pos_integer()) :: Enumerable.t()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Converts the IO `device` into an `IO.Stream`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["line_or_bytes"]}, %{arity: 2, name: "binstream", type: :function, origin: "IO", spec: "@spec binstream(device(), :line | pos_integer()) :: Enumerable.t()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Converts the IO `device` into an `IO.Stream`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["device", "line_or_bytes"]}, %{arity: 1, name: "binwrite", type: :function, origin: "IO", spec: "@spec binwrite(device(), iodata()) :: :ok", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Writes `iodata` to the given `device`.", visibility: :public, parens?: true, argument_names: ["iodata"]}, %{arity: 2, name: "binwrite", type: :function, origin: "IO", spec: "@spec binwrite(device(), iodata()) :: :ok", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Writes `iodata` to the given `device`.", visibility: :public, parens?: true, argument_names: ["device", "iodata"]}, %{arity: 1, name: "chardata_to_string", type: :function, origin: "IO", spec: "@spec chardata_to_string(chardata()) :: String.t()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Converts chardata into a string.", visibility: :public, parens?: true, argument_names: ["chardata"]}, %{arity: 2, name: "each_binstream", type: :function, origin: "IO", spec: "", metadata: %{hidden: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["device", "line_or_chars"]}, %{arity: 2, name: "each_stream", type: :function, origin: "IO", spec: "", metadata: %{hidden: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["device", "line_or_codepoints"]}, %{arity: 1, name: "getn", type: :function, origin: "IO", spec: "@spec getn(\n  device() | chardata() | String.Chars.t(),\n  pos_integer() | :eof | chardata() | String.Chars.t()\n) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Gets a number of bytes from IO device `:stdio`.", visibility: :public, parens?: true, argument_names: ["prompt"]}, %{arity: 2, name: "getn", type: :function, origin: "IO", spec: "@spec getn(\n  device() | chardata() | String.Chars.t(),\n  pos_integer() | :eof | chardata() | String.Chars.t()\n) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Gets a number of bytes from IO device `:stdio`.", visibility: :public, parens?: true, argument_names: ["prompt", "count"]}, %{arity: 3, name: "getn", type: :function, origin: "IO", spec: "@spec getn(device(), chardata() | String.Chars.t(), pos_integer() | :eof) :: chardata() | nodata()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Gets a number of bytes from the IO `device`.", visibility: :public, parens?: true, argument_names: ["device", "prompt", "count"]}, %{arity: 1, name: "gets", type: :function, origin: "IO", spec: "@spec gets(device(), chardata() | String.Chars.t()) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads a line from the IO `device`.", visibility: :public, parens?: true, argument_names: ["prompt"]}, %{arity: 2, name: "gets", type: :function, origin: "IO", spec: "@spec gets(device(), chardata() | String.Chars.t()) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads a line from the IO `device`.", visibility: :public, parens?: true, argument_names: ["device", "prompt"]}, %{arity: 1, name: "inspect", type: :function, origin: "IO", spec: "@spec inspect(\n  item,\n  keyword()\n) :: item\nwhen item: var", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Inspects and writes the given `item` to the standard output.", visibility: :public, parens?: true, argument_names: ["item"]}, %{arity: 2, name: "inspect", type: :function, origin: "IO", spec: "@spec inspect(\n  item,\n  keyword()\n) :: item\nwhen item: var", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Inspects and writes the given `item` to the standard output.", visibility: :public, parens?: true, argument_names: ["item", "opts"]}, %{arity: 3, name: "inspect", type: :function, origin: "IO", spec: "@spec inspect(device(), item, keyword()) :: item when item: var", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Inspects `item` according to the given options using the IO `device`.", visibility: :public, parens?: true, argument_names: ["device", "item", "opts"]}, %{arity: 1, name: "iodata_length", type: :function, origin: "IO", spec: "@spec iodata_length(iodata()) :: non_neg_integer()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Complet (truncated)
22:27:07.611 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "ANSI", kind: :module, detail: "Functionality to render ANSI escape sequences.", sort_text: "0001_ANSI", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 25,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(66 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<48, 13>>...<<48, 13>>], text: "ANSI", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Stream", kind: :module, detail: "Defines an `IO.Stream` struct returned by `IO.stream/2` and `IO.binstream/2`.", sort_text: "0001_Stream", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 25,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(66 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<48, 13>>...<<48, 13>>], text: "Stream", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "__info__()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Provides runtime information about functions, macros, and other information\ndefined by the module.\n```elixir\n@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()\n```", kind: :markdown]>, detail: "(function)", filter_text: "__info__", insert_text_format: :snippet, sort_text: "0309_info__ 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 25,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(66 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<48, 13>>...<<48, 13>>], text: "__info__()", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "binread()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Reads from the IO `device`. The operation is Unicode unsafe.\n```elixir\n@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()\n```", kind: :markdown]>, detail: "(function)", filter_text: "binread", insert_text_format: :snippet, sort_text: "0301_binread 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 25,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(66 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<48, 13>>...<<48, 13>>], text: "binread()", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "binread(line_or_chars)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Reads from the IO `device`. The operation is Unicode unsafe.\n```elixir\n@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()\n```", kind: :markdown]>, detail: "(function)", filter_text: "binread", insert_text_format: :snippet, sort_text: "0301_binread 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 25,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(66 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455:  (truncated)
22:27:09.798 [info] Compiled aoc2024 in 2 ms
22:27:22.397 [info] Compiled aoc2024 in 2 ms
22:33:38.110 [info] Completion for LxPos<<17, 17>>
22:33:38.133 [info] Local completions are [%{name: "incremen", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}]
22:33:38.138 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "incremen", kind: :variable, detail: "incremen", sort_text: "0101_incremen", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 55,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(65 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 9>>...<<17, 17>>], text: "incremen", __struct__: LXical.Document.Edit}}]>]
22:33:59.694 [info] Completion for LxPos<<17, 23>>
22:33:59.719 [info] Local completions are [%{name: "curr", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{name: "curr_val", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 1, name: "ceil", type: :function, origin: "Kernel", spec: "@spec ceil(number()) :: integer()", metadata: %{guard: true, app: :elixir, since: "1.8.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the smallest integer greater than or equal to `number`.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 2, name: "case", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["condition", "clauses"]}, %{arity: 1, name: "cond", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["clauses"]}]
22:33:59.730 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "curr", kind: :variable, detail: "curr", sort_text: "0101_curr", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 78,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "curr", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "curr_val", kind: :variable, detail: "curr_val", sort_text: "0101_curr_val", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 78,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "curr_val", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "ceil(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the smallest integer greater than or equal to `number`.\n```elixir\n@spec ceil(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "ceil", insert_text_format: :snippet, sort_text: "0401_ceil 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 78,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "ceil(${1:number})", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "case (case statement)", kind: :class, detail: "", filter_text: "case", insert_text_format: :snippet, sort_text: "0401_case (case statement)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 78,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "case $1 do\n  ${2:pattern} -> $0\nend", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "cond (cond statement)", kind: :class, detail: "", filter_text: "cond", insert_text_format: :snippet, sort_text: "0401_cond (cond statement)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 78,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "cond do\n  ${1:test} ->\n    $0\nend", __struct__: LXical.Document.Edit}}]>]
22:34:07.262 [info] Completion for LxPos<<17, 30>>
22:34:07.283 [info] Local completions are [%{name: "curr_val", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}]
22:34:07.286 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "curr_val", kind: :variable, detail: "curr_val", sort_text: "0101_curr_val", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 95,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 30>>], text: "curr_val", __struct__: LXical.Document.Edit}}]>]
22:34:08.089 [info] Completion for LxPos<<17, 23>>
22:34:08.114 [info] Local completions are [%{name: "next", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{name: "next_val", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 0, name: "node", type: :function, origin: "Kernel", spec: "@spec node() :: node()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.", visibility: :public, parens?: true, argument_names: []}, %{arity: 1, name: "node", type: :function, origin: "Kernel", spec: "@spec node(pid() | reference() | port()) :: node()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.", visibility: :public, parens?: true, argument_names: ["arg"]}, %{arity: 1, name: "not", type: :function, origin: "Kernel", spec: "@spec not true :: false\n@spec not false :: true", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Strictly boolean \"not\" operator.", visibility: :public, parens?: true, argument_names: ["value"]}]
22:34:08.121 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "next", kind: :variable, detail: "next", sort_text: "0101_next", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 104,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "next", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "next_val", kind: :variable, detail: "next_val", sort_text: "0101_next_val", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 104,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "next_val", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "node()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.\n```elixir\n@spec node() :: node()\n```", kind: :markdown]>, detail: "(function)", filter_text: "node", insert_text_format: :snippet, sort_text: "0401_node 000", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 104,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "node()", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "node(arg)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.\n```elixir\n@spec node(pid() | reference() | port()) :: node()\n```", kind: :markdown]>, detail: "(function)", filter_text: "node", insert_text_format: :snippet, sort_text: "0401_node 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 104,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "node(${1:arg})", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "not(value)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Strictly boolean \"not\" operator.\n```elixir\n@spec not true :: false\n@spec not false :: true\n```", kind: :markdown]>, detail: "(function)", filter_text: "not", insert_text_format: :snippet, sort_text: "0401_not 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 104,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 22>>...<<17, 23>>], text: "not(${1:value})", __struct__: LXical.Document.Edit}}]>]
22:34:12.154 [info] Completion for LxPos<<17, 34>>
22:34:12.182 [info] Local completions are [%{name: "curr", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{name: "curr_val", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 1, name: "ceil", type: :function, origin: "Kernel", spec: "@spec ceil(number()) :: integer()", metadata: %{guard: true, app: :elixir, since: "1.8.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the smallest integer greater than or equal to `number`.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 2, name: "case", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["condition", "clauses"]}, %{arity: 1, name: "cond", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["clauses"]}]
22:34:12.192 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "curr", kind: :variable, detail: "curr", sort_text: "0101_curr", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 125,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 33>>...<<17, 34>>], text: "curr", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "curr_val", kind: :variable, detail: "curr_val", sort_text: "0101_curr_val", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 125,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 33>>...<<17, 34>>], text: "curr_val", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "ceil(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the smallest integer greater than or equal to `number`.\n```elixir\n@spec ceil(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "ceil", insert_text_format: :snippet, sort_text: "0401_ceil 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 125,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 33>>...<<17, 34>>], text: "ceil(${1:number})", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "case (case statement)", kind: :class, detail: "", filter_text: "case", insert_text_format: :snippet, sort_text: "0401_case (case statement)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 125,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 33>>...<<17, 34>>], text: "case $1 do\n  ${2:pattern} -> $0\nend", __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "cond (cond statement)", kind: :class, detail: "", filter_text: "cond", insert_text_format: :snippet, sort_text: "0401_cond (cond statement)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 125,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(60 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{range: LxRange[<<17, 33>>...<<17, 34>>], text: "cond do\n  ${1:test} ->\n    $0\nend", __struct__: LXical.Document.Edit}}]>]
22:34:58.688 [error] GenServer {LXical.Document.Store, 14} terminating
** (MatchError) no match of right hand side value: {:error, :backwards_clock}
    (lx_common 0.5.0) lib/lexical/identifier.ex:7: LXical.Identifier.next_global!/0
    (lx_common 0.5.0) lib/lexical/ast/analysis.ex:217: LXical.Ast.Analysis.with_scope_id/1
    (elixir 1.17.3) lib/macro.ex:671: anonymous fn/3 in Macro.prewalk/2
    (elixir 1.17.3) lib/macro.ex:599: Macro.traverse/4
    (elixir 1.17.3) lib/macro.ex:671: Macro.prewalk/2
    (lx_common 0.5.0) lib/lexical/ast/analysis.ex:126: LXical.Ast.Analysis.traverse/2
    (lx_common 0.5.0) lib/lexical/ast/analysis.ex:36: LXical.Ast.Analysis.new/2
    (lx_lexical_shared 0.5.0) lib/lexical/document/store.ex:71: LXical.Document.Store.State.fetch/3
Last message (from #PID<25542.173.0>): {:fetch, "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs", :analysis}
State: %{open: %{"file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs" => {:open_doc, #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 149,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(61 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect.ex:338: Inspect.Map.to_assoc/3
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6

>, %{}}}, __struct__: LXical.Document.Store.State, derivation_funs: %{analysis: &LXical.Ast.analyze/1}, temporary_open_refs: %{}}
Client #PID<25542.173.0> is remote on node :"project-aoc2024-36933@127.0.0.1"
22:34:58.690 [error] Process #PID<0.1549.0> terminating
** (MatchError) no match of right hand side value: {:error, :backwards_clock}
    (lx_common 0.5.0) lib/lexical/identifier.ex:7: LXical.Identifier.next_global!/0
    (lx_common 0.5.0) lib/lexical/ast/analysis.ex:217: LXical.Ast.Analysis.with_scope_id/1
    (elixir 1.17.3) lib/macro.ex:671: anonymous fn/3 in Macro.prewalk/2
    (elixir 1.17.3) lib/macro.ex:599: Macro.traverse/4
    (elixir 1.17.3) lib/macro.ex:671: Macro.prewalk/2
    (lx_common 0.5.0) lib/lexical/ast/analysis.ex:126: LXical.Ast.Analysis.traverse/2
    (lx_common 0.5.0) lib/lexical/ast/analysis.ex:36: LXical.Ast.Analysis.new/2
    (lx_lexical_shared 0.5.0) lib/lexical/document/store.ex:71: LXical.Document.Store.State.fetch/3
Initial Call: LXical.Document.Store.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 7339713
22:34:58.691 [error] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (MatchError) no match of right hand side value: {:error, :backwards_clock}
        (lx_common 0.5.0) lib/lexical/identifier.ex:7: LXical.Identifier.next_global!/0
        (lx_common 0.5.0) lib/lexical/ast/analysis.ex:217: LXical.Ast.Analysis.with_scope_id/1
        (elixir 1.17.3) lib/macro.ex:671: anonymous fn/3 in Macro.prewalk/2
        (elixir 1.17.3) lib/macro.ex:599: Macro.traverse/4
        (elixir 1.17.3) lib/macro.ex:671: Macro.prewalk/2
        (lx_common 0.5.0) lib/lexical/ast/analysis.ex:126: LXical.Ast.Analysis.traverse/2
        (lx_common 0.5.0) lib/lexical/ast/analysis.ex:36: LXical.Ast.Analysis.new/2
        (lx_lexical_shared 0.5.0) lib/lexical/document/store.ex:71: LXical.Document.Store.State.fetch/3
Pid: #PID<0.1549.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:34:58.691 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1581.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:03.369 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_open}, %{__struct__: LXical.Server.State, configuration: %{__struct__: LXical.Server.Configuration, project: %{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil}, support: %{deprecated: true, __struct__: LXical.Server.Configuration.Support, snippet: true, work_done_progress: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: #Protocol.Types.SignatureHelp.ClientCapabilities<[dynamic_registration: false, signature_information: #Protocol.Types.SignatureHelp.ClientCapabilities.SignatureInformation<[documentation_format: [:markdown, :plain_text], active_parameter_support: true, parameter_information: #Protocol.Types.SignatureHelp.ClientCapabilities.ParameterInformation<[label_offset_support: true]>]>]>, code_action_dynamic_registration: true, hierarchical_symbols: true}, client_name: "Neovim", dialyzer_enabled?: false, additional_watched_extensions: nil}, in_flight_requests: %{}, initialized?: true, shutdown_received?: false}}
22:35:03.369 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:04.623 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_open}, %{__struct__: LXical.Server.State, configuration: %{__struct__: LXical.Server.Configuration, project: %{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil}, support: %{deprecated: true, __struct__: LXical.Server.Configuration.Support, snippet: true, work_done_progress: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: #Protocol.Types.SignatureHelp.ClientCapabilities<[dynamic_registration: false, signature_information: #Protocol.Types.SignatureHelp.ClientCapabilities.SignatureInformation<[documentation_format: [:markdown, :plain_text], active_parameter_support: true, parameter_information: #Protocol.Types.SignatureHelp.ClientCapabilities.ParameterInformation<[label_offset_support: true]>]>]>, code_action_dynamic_registration: true, hierarchical_symbols: true}, client_name: "Neovim", dialyzer_enabled?: false, additional_watched_extensions: nil}, in_flight_requests: %{}, initialized?: true, shutdown_received?: false}}
22:35:04.623 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:05.023 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_open}, %{__struct__: LXical.Server.State, configuration: %{__struct__: LXical.Server.Configuration, project: %{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil}, support: %{deprecated: true, __struct__: LXical.Server.Configuration.Support, snippet: true, work_done_progress: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: #Protocol.Types.SignatureHelp.ClientCapabilities<[dynamic_registration: false, signature_information: #Protocol.Types.SignatureHelp.ClientCapabilities.SignatureInformation<[documentation_format: [:markdown, :plain_text], active_parameter_support: true, parameter_information: #Protocol.Types.SignatureHelp.ClientCapabilities.ParameterInformation<[label_offset_support: true]>]>]>, code_action_dynamic_registration: true, hierarchical_symbols: true}, client_name: "Neovim", dialyzer_enabled?: false, additional_watched_extensions: nil}, in_flight_requests: %{}, initialized?: true, shutdown_received?: false}}
22:35:05.023 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:05.023 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 18, character: 9]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 10, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 10, position: #Protocol.Types.Position<[line: 18, character: 9]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: %{__struct__: LXical.Server.Configuration, project: %{__struct__: LXical.Project, entropy: 36933, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil}, support: %{deprecated: true, __struct__: LXical.Server.Configuration.Support, snippet: true, work_done_progress: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: #Protocol.Types.SignatureHelp.ClientCapabilities<[dynamic_registration: false, signature_information: #Protocol.Types.SignatureHelp.ClientCapabilities.SignatureInformation<[documentation_format: [:markdown, :plain_text], active_parameter_support: true, parameter_information: #Protocol.Types.SignatureHelp.ClientCapabilities.ParameterInformation<[label_offset_support: true]>]>]>, code_action_dynamic_registration: true, hierarchical_symbols: true}, client_name: "Neovim", dialyzer_enabled?: false, additional_watched_extensions: nil}, in_flight_requests: %{}, initialized?: true, shutdown_received?: false}
22:35:05.031 [error] Process LXical.Server (#PID<0.1550.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 18, character: 9]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: [rand_seed: {%{type: :exsss, next: #Function<0.65977474/1 in :rand.exsss_next>, bits: 58, uniform: #Function<1.65977474/1 in :rand.exsss_uniform>, uniform_n: #Function<2.65977474/2 in :rand.exsss_uniform>, jump: #Function<3.65977474/1 in :rand.exsplus_jump>}, [189365027553326678 | 46975105292885834]}]
Trapping Exits: false
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 105274
22:35:05.031 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 18, character: 9]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1550.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:05.031 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1582.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:05.133 [error] Received textDocument/didChange before server was initialized
22:35:05.134 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:05.134 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:05.613 [error] Received textDocument/didChange before server was initialized
22:35:05.614 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:05.614 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:05.763 [error] Received textDocument/didChange before server was initialized
22:35:05.764 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:05.764 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:38.915 [error] Received textDocument/didChange before server was initialized
22:35:38.916 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:38.916 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:38.916 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 14, character: 16]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 11, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 11, position: #Protocol.Types.Position<[line: 14, character: 16]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}
22:35:38.919 [error] Process LXical.Server (#PID<0.1582.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 14, character: 16]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 19517
22:35:38.919 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 14, character: 16]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1582.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:38.919 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1583.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:38.969 [error] Received textDocument/didChange before server was initialized
22:35:38.970 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:38.970 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:39.331 [error] Received textDocument/didChange before server was initialized
22:35:39.331 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:39.331 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:39.553 [error] Received textDocument/didChange before server was initialized
22:35:39.553 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:39.553 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:39.761 [error] Received textDocument/didChange before server was initialized
22:35:39.762 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:39.762 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:39.911 [error] Received textDocument/didChange before server was initialized
22:35:39.912 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:39.912 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:40.101 [error] Received textDocument/didChange before server was initialized
22:35:40.101 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:40.101 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:41.965 [error] Received textDocument/didChange before server was initialized
22:35:41.965 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:41.965 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:42.415 [error] Received textDocument/didChange before server was initialized
22:35:42.417 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:42.417 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:42.417 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 14, character: 37]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 12, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 12, position: #Protocol.Types.Position<[line: 14, character: 37]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}
22:35:42.418 [error] Process LXical.Server (#PID<0.1583.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 14, character: 37]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 26892
22:35:42.418 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 14, character: 37]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1583.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:42.419 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1584.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:42.749 [error] Received textDocument/didChange before server was initialized
22:35:42.749 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:42.749 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:47.590 [error] Received textDocument/didChange before server was initialized
22:35:47.590 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:47.590 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:47.815 [error] Received textDocument/didChange before server was initialized
22:35:47.816 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:47.816 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:47.986 [error] Received textDocument/didChange before server was initialized
22:35:47.987 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:47.987 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:48.328 [error] Received textDocument/didChange before server was initialized
22:35:48.328 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:48.328 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:49.902 [error] Received textDocument/didChange before server was initialized
22:35:49.902 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:49.902 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:51.761 [error] Received textDocument/didChange before server was initialized
22:35:51.762 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:51.762 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:53.729 [error] Received textDocument/didChange before server was initialized
22:35:53.729 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:53.730 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:53.877 [error] Received textDocument/didChange before server was initialized
22:35:53.877 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:53.877 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:54.161 [error] Received textDocument/didChange before server was initialized
22:35:54.162 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:54.162 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:54.789 [error] Received textDocument/didChange before server was initialized
22:35:54.790 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:54.790 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:54.961 [error] Received textDocument/didChange before server was initialized
22:35:54.962 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:54.962 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:54.962 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 11]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 13, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 13, position: #Protocol.Types.Position<[line: 20, character: 11]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}
22:35:54.964 [error] Process LXical.Server (#PID<0.1584.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 11]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 34465
22:35:54.964 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 11]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1584.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:54.964 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1585.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:55.123 [error] Received textDocument/didChange before server was initialized
22:35:55.124 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:55.124 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:55.647 [error] Received textDocument/didChange before server was initialized
22:35:55.648 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:55.648 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:55.915 [error] Received textDocument/didChange before server was initialized
22:35:55.916 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:55.916 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:56.109 [error] Received textDocument/didChange before server was initialized
22:35:56.110 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:56.110 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:56.282 [error] Received textDocument/didChange before server was initialized
22:35:56.284 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:56.284 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:56.347 [error] Received textDocument/didChange before server was initialized
22:35:56.348 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:56.348 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:56.348 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 13]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 14, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 14, position: #Protocol.Types.Position<[line: 20, character: 13]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}
22:35:56.350 [error] Process LXical.Server (#PID<0.1585.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 13]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 23232
22:35:56.350 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 13]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1585.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:56.351 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1586.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:56.509 [error] Received textDocument/didChange before server was initialized
22:35:56.510 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:56.510 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:56.599 [error] Received textDocument/didChange before server was initialized
22:35:56.600 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:56.600 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:56.768 [error] Received textDocument/didChange before server was initialized
22:35:56.769 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:56.769 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:57.003 [error] Received textDocument/didChange before server was initialized
22:35:57.003 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:57.003 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:57.631 [error] Received textDocument/didChange before server was initialized
22:35:57.631 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:57.631 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:57.794 [error] Received textDocument/didChange before server was initialized
22:35:57.795 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:57.795 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:58.001 [error] Received textDocument/didChange before server was initialized
22:35:58.002 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:58.002 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:58.527 [error] Received textDocument/didChange before server was initialized
22:35:58.528 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:58.528 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:58.528 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 21]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 15, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 15, position: #Protocol.Types.Position<[line: 20, character: 21]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}
22:35:58.529 [error] Process LXical.Server (#PID<0.1586.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 21]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 26986
22:35:58.530 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 21]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1586.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:58.530 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1587.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:58.809 [error] Received textDocument/didChange before server was initialized
22:35:58.809 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:58.809 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:59.075 [error] Received textDocument/didChange before server was initialized
22:35:59.076 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
22:35:59.076 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
22:35:59.076 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 23]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Last message: {:"$gen_cast", {:protocol_message, %{id: 16, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 16, position: #Protocol.Types.Position<[line: 20, character: 23]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :trigger_character, trigger_character: "-"]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}}
State: %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}
22:35:59.078 [error] Process LXical.Server (#PID<0.1587.0>) terminating
** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
    (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 23]>, nil)
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
    (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
    (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
    (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
    (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
    (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1547.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.1548.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 15895
22:35:59.078 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in LXical.Protocol.Conversions.to_elixir/2
        (lx_protocol 0.5.0) lib/lexical/protocol/conversions.ex:22: LXical.Protocol.Conversions.to_elixir(#Protocol.Types.Position<[line: 20, character: 23]>, nil)
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:52: anonymous fn/4 in LXical.Convertible.Helpers.apply/3
        (elixir 1.17.3) lib/enum.ex:4858: Enumerable.List.reduce/3
        (elixir 1.17.3) lib/enum.ex:2585: Enum.reduce_while/3
        (lx_lexical_shared 0.5.0) lib/lexical/convertible.ex:182: LXical.Convertible.Any.to_native/2
        (lx_proto 0.5.0) lib/lexical/proto/convert.ex:22: LXical.Proto.Convert.to_native/1
        (lx_server 0.5.0) lib/lexical/server.ex:134: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
Pid: #PID<0.1587.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:59.079 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
22:35:59.080 [info] Application lx_server exited: shutdown
23:21:14.974 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.119.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
23:21:14.974 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.118.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:21:14.974 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:21:14.974 [info] Application logger started at :nonode@nohost
23:21:15.601 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.1528.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
23:21:15.601 [info] Application runtime_tools started at :nonode@nohost
23:21:15.603 [info] Application erts started at :nonode@nohost
23:21:15.603 [info] Application lx_lexical_shared started at :nonode@nohost
23:21:15.603 [info] Application lx_lexical_test started at :nonode@nohost
23:21:15.604 [info] Child LXSnowflake.Generator of Supervisor #PID<0.1535.0> (Supervisor.Default) started
Pid: #PID<0.1536.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.604 [info] Application lx_snowflake started at :nonode@nohost
23:21:15.604 [info] Application lx_sourceror started at :nonode@nohost
23:21:15.604 [info] Application lx_common started at :nonode@nohost
23:21:15.604 [info] Application lx_elixir_sense started at :nonode@nohost
23:21:15.604 [info] Application jason started at :nonode@nohost
23:21:15.604 [info] Application logger_file_backend started at :nonode@nohost
23:21:15.604 [info] Application lx_path_glob started at :nonode@nohost
23:21:15.605 [info] Application lx_proto started at :nonode@nohost
23:21:15.605 [info] Application lx_protocol started at :nonode@nohost
23:21:15.616 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1549.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.619 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1550.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.620 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1551.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:21:15.620 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1552.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:21:15.620 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1553.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.620 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1554.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.620 [info] Application lx_server started at :nonode@nohost
23:21:15.635 [info] Starting project at uri file:///home/yoshi/source/aoc/aoc2024
23:21:15.649 [info] Child {LXical.Server.Project.Progress, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1556.0>
Start Call: LXical.Server.Project.Progress.start_link(%{__struct__: LXical.Project, entropy: 54239, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.652 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1557.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%{__struct__: LXical.Project, entropy: 54239, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:15.661 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.1560.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
23:21:15.663 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.1561.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
23:21:15.665 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.1562.0>
Start Call: :net_kernel.start_link(%{name: :"manager-aoc2024-54239@127.0.0.1", supervisor: :net_sup_dynamic, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 2000
Type: :worker
23:21:15.665 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.1559.0>
Start Call: :erl_distribution.start_link(%{name: :"manager-aoc2024-54239@127.0.0.1", supervisor: :net_sup_dynamic, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
23:21:16.188 [info] Child {LXical.Server.Project.Node, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1558.0>
Start Call: LXical.Server.Project.Node.start_link(%{__struct__: LXical.Project, entropy: 54239, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:16.193 [info] Child {LXical.Server.Project.Diagnostics, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1570.0>
Start Call: LXical.Server.Project.Diagnostics.start_link(%{__struct__: LXical.Project, entropy: 54239, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:16.197 [info] Child {LXical.Server.Project.Intelligence, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1571.0>
Start Call: LXical.Server.Project.Intelligence.start_link(%{__struct__: LXical.Project, entropy: 54239, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:16.198 [info] Child LXical.Server.Project.SearchListener of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1572.0>
Start Call: LXical.Server.Project.SearchListener.start_link(%{__struct__: LXical.Project, entropy: 54239, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:21:16.200 [info] Lexical Initialized
23:21:16.200 [info] opened file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs
23:21:16.280 [info] Compiled aoc2024 in 87 ms
23:23:40.488 [info] Compiled aoc2024 in 2 ms
23:24:31.675 [info] Resolved entity: {:variable, :loop}
23:25:18.612 [info] Compiled aoc2024 in 2 ms
23:25:29.701 [info] Emitting completions: []
23:25:30.724 [info] Emitting completions: []
23:25:30.828 [info] Emitting completions: []
23:25:30.888 [info] Emitting completions: []
23:25:30.962 [info] Emitting completions: []
23:25:32.673 [info] Compiled aoc2024 in 2 ms
23:26:34.367 [info] Compiled aoc2024 in 2 ms
23:28:10.286 [info] Response %{error: nil, id: 8, result: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 28,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(39 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: []}, __struct__: LXical.Protocol.Responses.Formatting}
23:28:12.136 [info] Compiled aoc2024 in 2 ms
23:28:50.162 [info] Completion for LxPos<<25, 6>>
23:28:50.832 [info] Local completions are [%{name: "reports", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 1, name: "read_input", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}, %{arity: 2, name: "remove", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["report", "index"]}, %{arity: 2, name: "rem", type: :function, origin: "Kernel", spec: "@spec rem(integer(), neg_integer() | pos_integer()) :: integer()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Computes the remainder of an integer division.", visibility: :public, parens?: true, argument_names: ["dividend", "divisor"]}, %{arity: 1, name: "round", type: :function, origin: "Kernel", spec: "@spec round(number()) :: integer()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Rounds a number to the nearest integer.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 1, name: "receive", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["args"]}, %{arity: 2, name: "require", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["module", "opts"]}, %{arity: 1, name: "raise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["message"]}, %{arity: 2, name: "raise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["exception", "attributes"]}, %{arity: 2, name: "reraise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["message", "stacktrace"]}, %{arity: 3, name: "reraise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["exception", "attributes", "stacktrace"]}]
23:28:50.860 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "reports", kind: :variable, detail: "reports", sort_text: "0101_reports", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 33,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "reports", range: LxRange[<<25, 5>>...<<25, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "read_input(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "read_input", insert_text_format: :snippet, sort_text: "0201_read_input 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 33,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "read_input(${1:file_path})", range: LxRange[<<25, 5>>...<<25, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "remove(report, index)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "remove", insert_text_format: :snippet, sort_text: "0201_remove 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 33,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "remove(${1:report}, ${2:index})", range: LxRange[<<25, 5>>...<<25, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "rem(dividend, divisor)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Computes the remainder of an integer division.\n```elixir\n@spec rem(integer(), neg_integer() | pos_integer()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "rem", insert_text_format: :snippet, sort_text: "0401_rem 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 33,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "rem(${1:dividend}, ${2:divisor})", range: LxRange[<<25, 5>>...<<25, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "round(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Rounds a number to the nearest integer.\n```elixir\n@spec round(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "round", insert_text_format: :snippet, sort_text: "0401_round 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 33,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "round(${1:number})", range: LxRange[<<25, 5>>...<<25, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item (truncated)
23:28:56.024 [info] Completion for LxPos<<25, 16>>
23:28:56.053 [info] Local completions are [%{name: "reports", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 1, name: "read_input", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}, %{arity: 2, name: "remove", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["report", "index"]}, %{arity: 2, name: "rem", type: :function, origin: "Kernel", spec: "@spec rem(integer(), neg_integer() | pos_integer()) :: integer()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Computes the remainder of an integer division.", visibility: :public, parens?: true, argument_names: ["dividend", "divisor"]}, %{arity: 1, name: "round", type: :function, origin: "Kernel", spec: "@spec round(number()) :: integer()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Rounds a number to the nearest integer.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 1, name: "receive", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["args"]}, %{arity: 2, name: "require", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["module", "opts"]}, %{arity: 1, name: "raise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["message"]}, %{arity: 2, name: "raise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["exception", "attributes"]}, %{arity: 2, name: "reraise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["message", "stacktrace"]}, %{arity: 3, name: "reraise", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["exception", "attributes", "stacktrace"]}]
23:28:56.070 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "reports", kind: :variable, detail: "reports", sort_text: "0101_reports", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 43,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "reports", range: LxRange[<<25, 15>>...<<25, 16>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "read_input(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "read_input", insert_text_format: :snippet, sort_text: "0201_read_input 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 43,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "read_input(${1:file_path})", range: LxRange[<<25, 15>>...<<25, 16>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "remove(report, index)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "remove", insert_text_format: :snippet, sort_text: "0201_remove 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 43,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "remove(${1:report}, ${2:index})", range: LxRange[<<25, 15>>...<<25, 16>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "rem(dividend, divisor)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Computes the remainder of an integer division.\n```elixir\n@spec rem(integer(), neg_integer() | pos_integer()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "rem", insert_text_format: :snippet, sort_text: "0401_rem 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 43,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "rem(${1:dividend}, ${2:divisor})", range: LxRange[<<25, 15>>...<<25, 16>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "round(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Rounds a number to the nearest integer.\n```elixir\n@spec round(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "round", insert_text_format: :snippet, sort_text: "0401_round 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 43,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "round(${1:number})", range: LxRange[<<25, 15>>...<<25, 16>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Compl (truncated)
23:28:59.112 [info] Completion for LxPos<<25, 27>>
23:28:59.135 [info] Local completions are [%{arity: 1, name: "floor", type: :function, origin: "Kernel", spec: "@spec floor(number()) :: integer()", metadata: %{guard: true, app: :elixir, since: "1.8.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the largest integer smaller than or equal to `number`.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 3, name: "function_exported?", type: :function, origin: "Kernel", spec: "@spec function_exported?(module(), atom(), arity()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.", visibility: :public, parens?: true, argument_names: ["module", "function", "arity"]}, %{arity: 1, name: "fn", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["term"]}, %{arity: 1, name: "for", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["args"]}]
23:28:59.145 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "floor(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the largest integer smaller than or equal to `number`.\n```elixir\n@spec floor(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "floor", insert_text_format: :snippet, sort_text: "0401_floor 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 64,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "floor(${1:number})", range: LxRange[<<25, 26>>...<<25, 27>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "function_exported?(module, function, arity)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.\n```elixir\n@spec function_exported?(module(), atom(), arity()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "function_exported?", insert_text_format: :snippet, sort_text: "0401_function_exported? 003", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 64,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "function_exported?(${1:module}, ${2:function}, ${3:arity})", range: LxRange[<<25, 26>>...<<25, 27>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "fn(term)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "```elixir\n\n```", kind: :markdown]>, detail: "(macro)", filter_text: "fn", insert_text_format: :snippet, sort_text: "0401_fn 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 64,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "fn(${1:term})", range: LxRange[<<25, 26>>...<<25, 27>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "for (comprehension)", kind: :class, detail: "", filter_text: "for", insert_text_format: :snippet, sort_text: "0401_for (comprehension)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 64,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "for ${1:pattern} <- ${2:enumerable} do\n  $0\nend", range: LxRange[<<25, 26>>...<<25, 27>>], __struct__: LXical.Document.Edit}}]>]
23:29:02.210 [info] Completion for LxPos<<24, 17>>
23:29:02.233 [info] Local completions are [%{name: "f", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 1, name: "floor", type: :function, origin: "Kernel", spec: "@spec floor(number()) :: integer()", metadata: %{guard: true, app: :elixir, since: "1.8.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the largest integer smaller than or equal to `number`.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 3, name: "function_exported?", type: :function, origin: "Kernel", spec: "@spec function_exported?(module(), atom(), arity()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.", visibility: :public, parens?: true, argument_names: ["module", "function", "arity"]}, %{arity: 1, name: "fn", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["term"]}, %{arity: 1, name: "for", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["args"]}]
23:29:02.245 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "f", kind: :variable, detail: "f", sort_text: "0101_f", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 74,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "f", range: LxRange[<<24, 16>>...<<24, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "floor(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the largest integer smaller than or equal to `number`.\n```elixir\n@spec floor(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "floor", insert_text_format: :snippet, sort_text: "0401_floor 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 74,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "floor(${1:number})", range: LxRange[<<24, 16>>...<<24, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "function_exported?(module, function, arity)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.\n```elixir\n@spec function_exported?(module(), atom(), arity()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "function_exported?", insert_text_format: :snippet, sort_text: "0401_function_exported? 003", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 74,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "function_exported?(${1:module}, ${2:function}, ${3:arity})", range: LxRange[<<24, 16>>...<<24, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "fn(term)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "```elixir\n\n```", kind: :markdown]>, detail: "(macro)", filter_text: "fn", insert_text_format: :snippet, sort_text: "0401_fn 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 74,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "fn(${1:term})", range: LxRange[<<24, 16>>...<<24, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "for (comprehension)", kind: :class, detail: "", filter_text: "for", insert_text_format: :snippet, sort_text: "0401_for (comprehension)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 74,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(40 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "for ${1:pattern} <- ${2:enumerable} do\n  $0\nend", range: LxRange[<<24, 16>>...<<24, 17>>], __struct__: LXical.Document.Edit}}]>]
23:29:25.241 [info] Completion for LxPos<<29, 17>>
23:29:25.263 [info] Local completions are [%{name: "f", __struct__: LXical.RemoteControl.Completion.Candidate.Variable}, %{arity: 1, name: "floor", type: :function, origin: "Kernel", spec: "@spec floor(number()) :: integer()", metadata: %{guard: true, app: :elixir, since: "1.8.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the largest integer smaller than or equal to `number`.", visibility: :public, parens?: true, argument_names: ["number"]}, %{arity: 3, name: "function_exported?", type: :function, origin: "Kernel", spec: "@spec function_exported?(module(), atom(), arity()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.", visibility: :public, parens?: true, argument_names: ["module", "function", "arity"]}, %{arity: 1, name: "fn", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["term"]}, %{arity: 1, name: "for", type: :macro, origin: "Kernel.SpecialForms", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["args"]}]
23:29:25.272 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "f", kind: :variable, detail: "f", sort_text: "0101_f", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 98,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "f", range: LxRange[<<29, 16>>...<<29, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "floor(number)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the largest integer smaller than or equal to `number`.\n```elixir\n@spec floor(number()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "floor", insert_text_format: :snippet, sort_text: "0401_floor 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 98,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "floor(${1:number})", range: LxRange[<<29, 16>>...<<29, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "function_exported?(module, function, arity)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `module` is loaded and contains a\npublic `function` with the given `arity`, otherwise `false`.\n```elixir\n@spec function_exported?(module(), atom(), arity()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "function_exported?", insert_text_format: :snippet, sort_text: "0401_function_exported? 003", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 98,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "function_exported?(${1:module}, ${2:function}, ${3:arity})", range: LxRange[<<29, 16>>...<<29, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "fn(term)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "```elixir\n\n```", kind: :markdown]>, detail: "(macro)", filter_text: "fn", insert_text_format: :snippet, sort_text: "0401_fn 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 98,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "fn(${1:term})", range: LxRange[<<29, 16>>...<<29, 17>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "for (comprehension)", kind: :class, detail: "", filter_text: "for", insert_text_format: :snippet, sort_text: "0401_for (comprehension)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 98,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "for ${1:pattern} <- ${2:enumerable} do\n  $0\nend", range: LxRange[<<29, 16>>...<<29, 17>>], __struct__: LXical.Document.Edit}}]>]
23:29:29.137 [info] Compiled aoc2024 in 2 ms
23:29:45.292 [info] Completion for LxPos<<40, 28>>
23:29:45.303 [info] Local completions are [%{arity: 1, name: "part_one", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}, %{arity: 1, name: "part_two", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}]
23:29:45.309 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "part_one(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "part_one", insert_text_format: :snippet, sort_text: "0301_part_one 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 110,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "part_one", range: LxRange[<<40, 24>>...<<40, 28>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "part_two(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "part_two", insert_text_format: :snippet, sort_text: "0301_part_two 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 110,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(41 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "part_two", range: LxRange[<<40, 24>>...<<40, 28>>], __struct__: LXical.Document.Edit}}]>]
23:29:47.288 [info] Emitting completions: []
23:29:47.504 [info] Emitting completions: []
23:29:48.039 [info] Emitting completions: []
23:29:48.112 [info] Emitting completions: []
23:29:48.138 [info] Emitting completions: []
23:29:48.867 [info] Compiled aoc2024 in 2 ms
23:29:57.011 [info] Completion for LxPos<<27, 9>>
23:29:57.028 [info] Local completions are [%{name: "IEx", metadata: %{app: :iex}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "IEx", summary: "Elixir's interactive shell."}, %{name: "IO", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "IO", summary: "Functions handling input/output (IO)."}, %{name: "Inspect", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Protocol, full_name: "Inspect", summary: "The `Inspect` protocol converts an Elixir data structure into an\nalgebra document."}, %{name: "Integer", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "Integer", summary: "Functions for working with integers."}]
23:29:57.041 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "IEx", kind: :module, detail: "Elixir's interactive shell.", sort_text: "0001_IEx", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 128,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "IEx", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "IO", kind: :module, detail: "Functions handling input/output (IO).", sort_text: "0001_IO", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 128,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "IO", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Inspect", kind: :module, detail: "The `Inspect` protocol converts an Elixir data structure into an\nalgebra document.", sort_text: "0001_Inspect", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 128,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Inspect", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Integer", kind: :module, detail: "Functions for working with integers.", sort_text: "0001_Integer", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 128,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Integer", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>]
23:29:57.369 [info] Completion for LxPos<<27, 11>>
23:29:57.382 [info] Local completions are []
23:29:57.382 [info] Emitting completions: []
23:29:57.654 [info] Completion for LxPos<<27, 10>>
23:29:57.665 [info] Local completions are []
23:29:57.666 [info] Emitting completions: []
23:29:57.819 [info] Completion for LxPos<<27, 9>>
23:29:57.835 [info] Local completions are [%{name: "IEx", metadata: %{app: :iex}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "IEx", summary: "Elixir's interactive shell."}, %{name: "IO", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "IO", summary: "Functions handling input/output (IO)."}, %{name: "Inspect", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Protocol, full_name: "Inspect", summary: "The `Inspect` protocol converts an Elixir data structure into an\nalgebra document."}, %{name: "Integer", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "Integer", summary: "Functions for working with integers."}]
23:29:57.844 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "IEx", kind: :module, detail: "Elixir's interactive shell.", sort_text: "0001_IEx", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 132,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "IEx", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "IO", kind: :module, detail: "Functions handling input/output (IO).", sort_text: "0001_IO", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 132,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "IO", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Inspect", kind: :module, detail: "The `Inspect` protocol converts an Elixir data structure into an\nalgebra document.", sort_text: "0001_Inspect", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 132,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Inspect", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Integer", kind: :module, detail: "Functions for working with integers.", sort_text: "0001_Integer", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 132,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Integer", range: LxRange[<<27, 8>>...<<27, 9>>], __struct__: LXical.Document.Edit}}]>]
23:29:58.323 [info] Completion for LxPos<<27, 11>>
23:29:58.368 [info] Local completions are [%{name: "ANSI", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "IO.ANSI", summary: "Functionality to render ANSI escape sequences."}, %{name: "Stream", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Struct, full_name: "IO.Stream", summary: "Defines an `IO.Stream` struct returned by `IO.stream/2` and `IO.binstream/2`."}, %{name: "StreamError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "IO.StreamError", summary: ""}, %{arity: 1, name: "__info__", type: :function, origin: "IO", spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", metadata: %{builtin: true}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Provides runtime information about functions, macros, and other information\ndefined by the module.", visibility: :public, parens?: true, argument_names: ["atom"]}, %{arity: 1, name: "binread", type: :function, origin: "IO", spec: "@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads from the IO `device`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["line_or_chars"]}, %{arity: 2, name: "binread", type: :function, origin: "IO", spec: "@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads from the IO `device`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["device", "line_or_chars"]}, %{arity: 0, name: "binstream", type: :function, origin: "IO", spec: "@spec binstream() :: Enumerable.t(binary())", metadata: %{app: :elixir, since: "1.12.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns a raw, line-based `IO.Stream` on `:stdio`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: []}, %{arity: 1, name: "binstream", type: :function, origin: "IO", spec: "@spec binstream(device(), :line | pos_integer()) :: Enumerable.t()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Converts the IO `device` into an `IO.Stream`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["line_or_bytes"]}, %{arity: 2, name: "binstream", type: :function, origin: "IO", spec: "@spec binstream(device(), :line | pos_integer()) :: Enumerable.t()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Converts the IO `device` into an `IO.Stream`. The operation is Unicode unsafe.", visibility: :public, parens?: true, argument_names: ["device", "line_or_bytes"]}, %{arity: 1, name: "binwrite", type: :function, origin: "IO", spec: "@spec binwrite(device(), iodata()) :: :ok", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Writes `iodata` to the given `device`.", visibility: :public, parens?: true, argument_names: ["iodata"]}, %{arity: 2, name: "binwrite", type: :function, origin: "IO", spec: "@spec binwrite(device(), iodata()) :: :ok", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Writes `iodata` to the given `device`.", visibility: :public, parens?: true, argument_names: ["device", "iodata"]}, %{arity: 1, name: "chardata_to_string", type: :function, origin: "IO", spec: "@spec chardata_to_string(chardata()) :: String.t()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Converts chardata into a string.", visibility: :public, parens?: true, argument_names: ["chardata"]}, %{arity: 2, name: "each_binstream", type: :function, origin: "IO", spec: "", metadata: %{hidden: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["device", "line_or_chars"]}, %{arity: 2, name: "each_stream", type: :function, origin: "IO", spec: "", metadata: %{hidden: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["device", "line_or_codepoints"]}, %{arity: 1, name: "getn", type: :function, origin: "IO", spec: "@spec getn(\n  device() | chardata() | String.Chars.t(),\n  pos_integer() | :eof | chardata() | String.Chars.t()\n) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Gets a number of bytes from IO device `:stdio`.", visibility: :public, parens?: true, argument_names: ["prompt"]}, %{arity: 2, name: "getn", type: :function, origin: "IO", spec: "@spec getn(\n  device() | chardata() | String.Chars.t(),\n  pos_integer() | :eof | chardata() | String.Chars.t()\n) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Gets a number of bytes from IO device `:stdio`.", visibility: :public, parens?: true, argument_names: ["prompt", "count"]}, %{arity: 3, name: "getn", type: :function, origin: "IO", spec: "@spec getn(device(), chardata() | String.Chars.t(), pos_integer() | :eof) :: chardata() | nodata()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Gets a number of bytes from the IO `device`.", visibility: :public, parens?: true, argument_names: ["device", "prompt", "count"]}, %{arity: 1, name: "gets", type: :function, origin: "IO", spec: "@spec gets(device(), chardata() | String.Chars.t()) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads a line from the IO `device`.", visibility: :public, parens?: true, argument_names: ["prompt"]}, %{arity: 2, name: "gets", type: :function, origin: "IO", spec: "@spec gets(device(), chardata() | String.Chars.t()) :: chardata() | nodata()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Reads a line from the IO `device`.", visibility: :public, parens?: true, argument_names: ["device", "prompt"]}, %{arity: 1, name: "inspect", type: :function, origin: "IO", spec: "@spec inspect(\n  item,\n  keyword()\n) :: item\nwhen item: var", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Inspects and writes the given `item` to the standard output.", visibility: :public, parens?: true, argument_names: ["item"]}, %{arity: 2, name: "inspect", type: :function, origin: "IO", spec: "@spec inspect(\n  item,\n  keyword()\n) :: item\nwhen item: var", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Inspects and writes the given `item` to the standard output.", visibility: :public, parens?: true, argument_names: ["item", "opts"]}, %{arity: 3, name: "inspect", type: :function, origin: "IO", spec: "@spec inspect(device(), item, keyword()) :: item when item: var", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Inspects `item` according to the given options using the IO `device`.", visibility: :public, parens?: true, argument_names: ["device", "item", "opts"]}, %{arity: 1, name: "iodata_length", type: :function, origin: "IO", spec: "@spec iodata_length(iodata()) :: non_neg_integer()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Complet (truncated)
23:29:58.445 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "ANSI", kind: :module, detail: "Functionality to render ANSI escape sequences.", sort_text: "0001_ANSI", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 134,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "ANSI", range: LxRange[<<27, 11>>...<<27, 11>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Stream", kind: :module, detail: "Defines an `IO.Stream` struct returned by `IO.stream/2` and `IO.binstream/2`.", sort_text: "0001_Stream", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 134,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Stream", range: LxRange[<<27, 11>>...<<27, 11>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "__info__()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Provides runtime information about functions, macros, and other information\ndefined by the module.\n```elixir\n@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()\n```", kind: :markdown]>, detail: "(function)", filter_text: "__info__", insert_text_format: :snippet, sort_text: "0309_info__ 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 134,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "__info__()", range: LxRange[<<27, 11>>...<<27, 11>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "binread()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Reads from the IO `device`. The operation is Unicode unsafe.\n```elixir\n@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()\n```", kind: :markdown]>, detail: "(function)", filter_text: "binread", insert_text_format: :snippet, sort_text: "0301_binread 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 134,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "binread()", range: LxRange[<<27, 11>>...<<27, 11>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "binread(line_or_chars)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Reads from the IO `device`. The operation is Unicode unsafe.\n```elixir\n@spec binread(device(), :eof | :line | non_neg_integer()) :: iodata() | nodata()\n```", kind: :markdown]>, detail: "(function)", filter_text: "binread", insert_text_format: :snippet, sort_text: "0301_binread 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 134,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(42 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex: (truncated)
23:30:08.206 [info] Compiled aoc2024 in 2 ms
23:30:18.659 [info] Emitting completions: []
23:30:18.875 [info] Emitting completions: []
23:30:18.956 [info] Emitting completions: []
23:30:19.013 [info] Emitting completions: []
23:30:19.091 [info] Emitting completions: []
23:30:19.691 [info] Compiled aoc2024 in 2 ms
23:31:37.859 [info] Resolved entity: {:call, Aoc2024.Day02.Solution, :remove, 2}
23:32:10.119 [info] Compiled aoc2024 in 2 ms
23:33:24.236 [info] Compiled aoc2024 in 2 ms
23:33:34.302 [info] Compiled aoc2024 in 2 ms
23:34:19.622 [info] Completion for LxPos<<12, 4>>
23:34:19.643 [info] Local completions are [%{name: "EEx", metadata: %{app: :eex}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "EEx", summary: "EEx stands for Embedded Elixir."}, %{name: "Elixir", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "Elixir", summary: ""}, %{name: "Enum", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "Enum", summary: "Functions for working with collections (known as enumerables)."}, %{name: "Enumerable", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Protocol, full_name: "Enumerable", summary: "Enumerable protocol used by `Enum` and `Stream` modules."}, %{name: "ErlangError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "ErlangError", summary: ""}, %{name: "ExUnit", metadata: %{app: :ex_unit}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "ExUnit", summary: "Unit testing framework for Elixir."}, %{name: "Exception", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Behaviour, full_name: "Exception", summary: "Functions for dealing with throw/catch/exit and exceptions."}]
23:34:19.653 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "EEx", kind: :module, detail: "EEx stands for Embedded Elixir.", sort_text: "0001_EEx", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 205,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "EEx", range: LxRange[<<12, 3>>...<<12, 4>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Elixir", kind: :module, detail: "Elixir", sort_text: "0001_Elixir", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 205,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Elixir", range: LxRange[<<12, 3>>...<<12, 4>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Enum", kind: :module, detail: "Functions for working with collections (known as enumerables).", sort_text: "0001_Enum", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 205,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Enum", range: LxRange[<<12, 3>>...<<12, 4>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Enumerable", kind: :module, detail: "Enumerable protocol used by `Enum` and `Stream` modules.", sort_text: "0001_Enumerable", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 205,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Enumerable", range: LxRange[<<12, 3>>...<<12, 4>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "ExUnit", kind: :module, detail: "Unit testing framework for Elixir.", sort_text: "0001_ExUnit", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 205,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "ExUnit", range: LxRange[<<12, 3>>...<<12, 4>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Exception", kind: :module, detail: "Functions for dealing with throw/catch/exit and exceptions.", sort_text: "0001_Exception", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 205,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_ato (truncated)
23:34:20.326 [info] Completion for LxPos<<12, 8>>
23:34:20.389 [info] Local completions are [%{name: "EmptyError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "Enum.EmptyError", summary: "An exception that is raised when something expects a non-empty enumerable\nbut finds an empty one."}, %{name: "OutOfBoundsError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "Enum.OutOfBoundsError", summary: "An exception that is raised when a function expects an enumerable to have\na certain size but finds that it is too small."}, %{arity: 1, name: "__info__", type: :function, origin: "Enum", spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", metadata: %{builtin: true}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Provides runtime information about functions, macros, and other information\ndefined by the module.", visibility: :public, parens?: true, argument_names: ["atom"]}, %{arity: 1, name: "all?", type: :function, origin: "Enum", spec: "@spec all?(t()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if all elements in `enumerable` are truthy.", visibility: :public, parens?: true, argument_names: ["enumerable"]}, %{arity: 2, name: "all?", type: :function, origin: "Enum", spec: "@spec all?(t(), (element() -> as_boolean(term()))) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `fun.(element)` is truthy for all elements in `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "fun"]}, %{arity: 1, name: "any?", type: :function, origin: "Enum", spec: "@spec any?(t()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if at least one element in `enumerable` is truthy.", visibility: :public, parens?: true, argument_names: ["enumerable"]}, %{arity: 2, name: "any?", type: :function, origin: "Enum", spec: "@spec any?(t(), (element() -> as_boolean(term()))) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `fun.(element)` is truthy for at least one element in `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "fun"]}, %{arity: 2, name: "at", type: :function, origin: "Enum", spec: "@spec at(t(), index(), default()) :: element() | default()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Finds the element at the given `index` (zero-based).", visibility: :public, parens?: true, argument_names: ["enumerable", "index"]}, %{arity: 3, name: "at", type: :function, origin: "Enum", spec: "@spec at(t(), index(), default()) :: element() | default()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Finds the element at the given `index` (zero-based).", visibility: :public, parens?: true, argument_names: ["enumerable", "index", "default"]}, %{arity: 2, name: "chunk", type: :function, origin: "Enum", spec: "", metadata: %{hidden: true, deprecated: "Use Enum.chunk_every/2 instead", app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["enumerable", "count"]}, %{arity: 3, name: "chunk", type: :function, origin: "Enum", spec: "", metadata: %{hidden: true, deprecated: "Use Enum.chunk_every/3 instead", app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["enum", "n", "step"]}, %{arity: 4, name: "chunk", type: :function, origin: "Enum", spec: "", metadata: %{hidden: true, deprecated: "Use Enum.chunk_every/4 instead", app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["enumerable", "count", "step", "leftover"]}, %{arity: 2, name: "chunk_by", type: :function, origin: "Enum", spec: "@spec chunk_by(t(), (element() -> any())) :: [list()]", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Splits enumerable on every element for which `fun` returns a new\nvalue.", visibility: :public, parens?: true, argument_names: ["enumerable", "fun"]}, %{arity: 2, name: "chunk_every", type: :function, origin: "Enum", spec: "@spec chunk_every(t(), pos_integer()) :: [list()]", metadata: %{app: :elixir, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Shortcut to `chunk_every(enumerable, count, count)`.\n", visibility: :public, parens?: true, argument_names: ["enumerable", "count"]}, %{arity: 3, name: "chunk_every", type: :function, origin: "Enum", spec: "@spec chunk_every(t(), pos_integer(), pos_integer(), t() | :discard) :: [list()]", metadata: %{app: :elixir, defaults: 1, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns list of lists containing `count` elements each, where\neach new chunk starts `step` elements into the `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "count", "step"]}, %{arity: 4, name: "chunk_every", type: :function, origin: "Enum", spec: "@spec chunk_every(t(), pos_integer(), pos_integer(), t() | :discard) :: [list()]", metadata: %{app: :elixir, defaults: 1, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns list of lists containing `count` elements each, where\neach new chunk starts `step` elements into the `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "count", "step", "leftover"]}, %{arity: 4, name: "chunk_while", type: :function, origin: "Enum", spec: "@spec chunk_while(\n  t(),\n  acc(),\n  (element(), acc() -> {:cont, chunk, acc()} | {:cont, acc()} | {:halt, acc()}),\n  (acc() -> {:cont, chunk, acc()} | {:cont, acc()})\n) :: Enumerable.t()\nwhen chunk: any()", metadata: %{app: :elixir, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Chunks the `enumerable` with fine grained control when every chunk is emitted.", visibility: :public, parens?: true, argument_names: ["enumerable", "acc", "chunk_fun", "after_fun"]}, %{arity: 1, name: "concat", type: :function, origin: "Enum", spec: "@spec concat(t()) :: t()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Given an enumerable of enumerables, concatenates the `enumerables` into\na single list.", visibility: :public, parens?: true, argument_names: ["enumerables"]}, %{arity: 2, name: "concat", type: :function, origin: "Enum", spec: "@spec concat(t(), t()) :: t()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Concatenates the enumerable on the `right` with the enumerable on the\n`left`.", visibility: :public, parens?: true, argument_names: ["left", "right"]}, %{arity: 1, name: "count", type: :function, origin: "Enum", spec: "@spec count(t()) :: non_neg_integer()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the size of the `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable"]}, %{arity: 2, name: "count", type: :function, origin: "Enum", spec: "@spec count(t(), (element() -> as_boolean(term()))) :: non_neg_integer()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the count of elements in the `enumerable` for which `fun` returns\na truthy value.", visibility: :public, parens?: true, argument_names: ["e (truncated)
23:34:20.497 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "__info__(atom)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Provides runtime information about functions, macros, and other information\ndefined by the module.\n```elixir\n@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()\n```", kind: :markdown]>, detail: "(function)", filter_text: "__info__", insert_text_format: :snippet, sort_text: "0309_info__ 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 209,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "__info__(${1:atom})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "all?(enumerable)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if all elements in `enumerable` are truthy.\n```elixir\n@spec all?(t()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "all?", insert_text_format: :snippet, sort_text: "0301_all? 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 209,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "all?(${1:enumerable})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "all?(enumerable, fun)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `fun.(element)` is truthy for all elements in `enumerable`.\n```elixir\n@spec all?(t(), (element() -> as_boolean(term()))) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "all?", insert_text_format: :snippet, sort_text: "0301_all? 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 209,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "all?(${1:enumerable}, ${2:fun})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "any?(enumerable)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if at least one element in `enumerable` is truthy.\n```elixir\n@spec any?(t()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "any?", insert_text_format: :snippet, sort_text: "0301_any? 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 209,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "any?(${1:enumerable})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "any?(enumerable, fun)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `fun.(element)` is truthy for at least one element in `enumerable`.\n```elixir\n@spec any?(t(), (element() -> as_boolean(term()))) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "any?", insert_text_format: :snippet, sort_text: "0301_any? 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 209,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language (truncated)
23:34:23.391 [info] Completion for LxPos<<12, 8>>
23:34:23.437 [info] Local completions are [%{name: "EmptyError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "Enum.EmptyError", summary: "An exception that is raised when something expects a non-empty enumerable\nbut finds an empty one."}, %{name: "OutOfBoundsError", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Exception, full_name: "Enum.OutOfBoundsError", summary: "An exception that is raised when a function expects an enumerable to have\na certain size but finds that it is too small."}, %{arity: 1, name: "__info__", type: :function, origin: "Enum", spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", metadata: %{builtin: true}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Provides runtime information about functions, macros, and other information\ndefined by the module.", visibility: :public, parens?: true, argument_names: ["atom"]}, %{arity: 1, name: "all?", type: :function, origin: "Enum", spec: "@spec all?(t()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if all elements in `enumerable` are truthy.", visibility: :public, parens?: true, argument_names: ["enumerable"]}, %{arity: 2, name: "all?", type: :function, origin: "Enum", spec: "@spec all?(t(), (element() -> as_boolean(term()))) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `fun.(element)` is truthy for all elements in `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "fun"]}, %{arity: 1, name: "any?", type: :function, origin: "Enum", spec: "@spec any?(t()) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if at least one element in `enumerable` is truthy.", visibility: :public, parens?: true, argument_names: ["enumerable"]}, %{arity: 2, name: "any?", type: :function, origin: "Enum", spec: "@spec any?(t(), (element() -> as_boolean(term()))) :: boolean()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `fun.(element)` is truthy for at least one element in `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "fun"]}, %{arity: 2, name: "at", type: :function, origin: "Enum", spec: "@spec at(t(), index(), default()) :: element() | default()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Finds the element at the given `index` (zero-based).", visibility: :public, parens?: true, argument_names: ["enumerable", "index"]}, %{arity: 3, name: "at", type: :function, origin: "Enum", spec: "@spec at(t(), index(), default()) :: element() | default()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Finds the element at the given `index` (zero-based).", visibility: :public, parens?: true, argument_names: ["enumerable", "index", "default"]}, %{arity: 2, name: "chunk", type: :function, origin: "Enum", spec: "", metadata: %{hidden: true, deprecated: "Use Enum.chunk_every/2 instead", app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["enumerable", "count"]}, %{arity: 3, name: "chunk", type: :function, origin: "Enum", spec: "", metadata: %{hidden: true, deprecated: "Use Enum.chunk_every/3 instead", app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["enum", "n", "step"]}, %{arity: 4, name: "chunk", type: :function, origin: "Enum", spec: "", metadata: %{hidden: true, deprecated: "Use Enum.chunk_every/4 instead", app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["enumerable", "count", "step", "leftover"]}, %{arity: 2, name: "chunk_by", type: :function, origin: "Enum", spec: "@spec chunk_by(t(), (element() -> any())) :: [list()]", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Splits enumerable on every element for which `fun` returns a new\nvalue.", visibility: :public, parens?: true, argument_names: ["enumerable", "fun"]}, %{arity: 2, name: "chunk_every", type: :function, origin: "Enum", spec: "@spec chunk_every(t(), pos_integer()) :: [list()]", metadata: %{app: :elixir, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Shortcut to `chunk_every(enumerable, count, count)`.\n", visibility: :public, parens?: true, argument_names: ["enumerable", "count"]}, %{arity: 3, name: "chunk_every", type: :function, origin: "Enum", spec: "@spec chunk_every(t(), pos_integer(), pos_integer(), t() | :discard) :: [list()]", metadata: %{app: :elixir, defaults: 1, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns list of lists containing `count` elements each, where\neach new chunk starts `step` elements into the `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "count", "step"]}, %{arity: 4, name: "chunk_every", type: :function, origin: "Enum", spec: "@spec chunk_every(t(), pos_integer(), pos_integer(), t() | :discard) :: [list()]", metadata: %{app: :elixir, defaults: 1, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns list of lists containing `count` elements each, where\neach new chunk starts `step` elements into the `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable", "count", "step", "leftover"]}, %{arity: 4, name: "chunk_while", type: :function, origin: "Enum", spec: "@spec chunk_while(\n  t(),\n  acc(),\n  (element(), acc() -> {:cont, chunk, acc()} | {:cont, acc()} | {:halt, acc()}),\n  (acc() -> {:cont, chunk, acc()} | {:cont, acc()})\n) :: Enumerable.t()\nwhen chunk: any()", metadata: %{app: :elixir, since: "1.5.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Chunks the `enumerable` with fine grained control when every chunk is emitted.", visibility: :public, parens?: true, argument_names: ["enumerable", "acc", "chunk_fun", "after_fun"]}, %{arity: 1, name: "concat", type: :function, origin: "Enum", spec: "@spec concat(t()) :: t()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Given an enumerable of enumerables, concatenates the `enumerables` into\na single list.", visibility: :public, parens?: true, argument_names: ["enumerables"]}, %{arity: 2, name: "concat", type: :function, origin: "Enum", spec: "@spec concat(t(), t()) :: t()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Concatenates the enumerable on the `right` with the enumerable on the\n`left`.", visibility: :public, parens?: true, argument_names: ["left", "right"]}, %{arity: 1, name: "count", type: :function, origin: "Enum", spec: "@spec count(t()) :: non_neg_integer()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the size of the `enumerable`.", visibility: :public, parens?: true, argument_names: ["enumerable"]}, %{arity: 2, name: "count", type: :function, origin: "Enum", spec: "@spec count(t(), (element() -> as_boolean(term()))) :: non_neg_integer()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the count of elements in the `enumerable` for which `fun` returns\na truthy value.", visibility: :public, parens?: true, argument_names: ["e (truncated)
23:34:23.517 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "__info__(atom)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Provides runtime information about functions, macros, and other information\ndefined by the module.\n```elixir\n@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()\n```", kind: :markdown]>, detail: "(function)", filter_text: "__info__", insert_text_format: :snippet, sort_text: "0309_info__ 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 215,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "__info__(${1:atom})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "all?(enumerable)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if all elements in `enumerable` are truthy.\n```elixir\n@spec all?(t()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "all?", insert_text_format: :snippet, sort_text: "0301_all? 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 215,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "all?(${1:enumerable})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "all?(enumerable, fun)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `fun.(element)` is truthy for all elements in `enumerable`.\n```elixir\n@spec all?(t(), (element() -> as_boolean(term()))) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "all?", insert_text_format: :snippet, sort_text: "0301_all? 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 215,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "all?(${1:enumerable}, ${2:fun})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "any?(enumerable)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if at least one element in `enumerable` is truthy.\n```elixir\n@spec any?(t()) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "any?", insert_text_format: :snippet, sort_text: "0301_any? 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 215,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "any?(${1:enumerable})", range: LxRange[<<12, 8>>...<<12, 8>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "any?(enumerable, fun)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns `true` if `fun.(element)` is truthy for at least one element in `enumerable`.\n```elixir\n@spec any?(t(), (element() -> as_boolean(term()))) :: boolean()\n```", kind: :markdown]>, detail: "(function)", filter_text: "any?", insert_text_format: :snippet, sort_text: "0301_any? 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 215,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(44 lines)>,
        dirty?: true,
        language (truncated)
23:35:19.179 [info] Completion for LxPos<<35, 20>>
23:35:19.211 [info] Local completions are [%{arity: 2, name: "div", type: :function, origin: "Kernel", spec: "@spec div(integer(), neg_integer() | pos_integer()) :: integer()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Performs an integer division.", visibility: :public, parens?: true, argument_names: ["dividend", "divisor"]}, %{arity: 0, name: "dbg", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 2, since: "1.14.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: []}, %{arity: 1, name: "dbg", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 2, since: "1.14.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["code"]}, %{arity: 2, name: "dbg", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 2, since: "1.14.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["code", "options"]}, %{arity: 1, name: "def", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call"]}, %{arity: 2, name: "def", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call", "expr"]}, %{arity: 2, name: "defdelegate", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["funs", "opts"]}, %{arity: 1, name: "defexception", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["fields"]}, %{arity: 1, name: "defguard", type: :macro, origin: "Kernel", spec: "@spec defguard(Macro.t()) :: Macro.t()", metadata: %{app: :elixir, since: "1.6.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["guard"]}, %{arity: 1, name: "defguardp", type: :macro, origin: "Kernel", spec: "@spec defguardp(Macro.t()) :: Macro.t()", metadata: %{app: :elixir, since: "1.6.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["guard"]}, %{arity: 2, name: "defimpl", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["name", "opts"]}, %{arity: 3, name: "defimpl", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["name", "opts", "do_block"]}, %{arity: 1, name: "defmacro", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call"]}, %{arity: 2, name: "defmacro", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call", "expr"]}, %{arity: 1, name: "defmacrop", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call"]}, %{arity: 2, name: "defmacrop", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call", "expr"]}, %{arity: 2, name: "defmodule", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["alias", "do_block"]}, %{arity: 1, name: "defoverridable", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["keywords_or_behaviour"]}, %{arity: 1, name: "defp", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call"]}, %{arity: 2, name: "defp", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["call", "expr"]}, %{arity: 2, name: "defprotocol", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: true, argument_names: ["name", "do_block"]}, %{arity: 1, name: "defstruct", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["fields"]}, %{arity: 2, name: "destructure", type: :macro, origin: "Kernel", spec: "", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Macro, visibility: :public, parens?: false, argument_names: ["left", "right"]}]
23:35:19.242 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "div(dividend, divisor)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Performs an integer division.\n```elixir\n@spec div(integer(), neg_integer() | pos_integer()) :: integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "div", insert_text_format: :snippet, sort_text: "0401_div 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 229,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "div", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "dbg()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "```elixir\n\n```", kind: :markdown]>, detail: "(macro)", filter_text: "dbg", insert_text_format: :snippet, sort_text: "0401_dbg 000", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 229,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "dbg", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "dbg(code)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "```elixir\n\n```", kind: :markdown]>, detail: "(macro)", filter_text: "dbg", insert_text_format: :snippet, sort_text: "0401_dbg 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 229,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "dbg", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "dbg(code, options)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "```elixir\n\n```", kind: :markdown]>, detail: "(macro)", filter_text: "dbg", insert_text_format: :snippet, sort_text: "0401_dbg 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 229,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "dbg", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "def (define a function)", kind: :class, detail: "", filter_text: "def", insert_text_format: :snippet, sort_text: "0401_def (define a function)", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 229,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "def ${1:name}($2) do\n  $0\nend", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "defdelegate (define a delegate function)", kind: :class, detail: "", filter_text: "defdelegate", insert_text_format: :snippet, (truncated)
23:35:28.613 [info] Completion for LxPos<<35, 20>>
23:35:28.633 [info] Local completions are [%{name: "LXElixirSense", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "LXElixirSense", summary: ""}, %{name: "LXFeatures", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "LXFeatures", summary: ""}, %{name: "LXPathGlob", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "LXPathGlob", summary: ""}, %{name: "LXSnowflake", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "LXSnowflake", summary: ""}, %{name: "LXSourceror", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "LXSourceror", summary: ""}, %{name: "LXical", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "LXical", summary: ""}, %{name: "List", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "List", summary: "Linked lists hold zero, one, or more elements in the chosen order."}, %{name: "Logger", metadata: %{app: :logger}, __struct__: LXical.RemoteControl.Completion.Candidate.Module, full_name: "Logger", summary: "A logger for Elixir applications."}]
23:35:28.639 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "List", kind: :module, detail: "Linked lists hold zero, one, or more elements in the chosen order.", sort_text: "0001_List", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 238,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "List", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "Logger", kind: :module, detail: "A logger for Elixir applications.", sort_text: "0001_Logger", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 238,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Logger", range: LxRange[<<35, 19>>...<<35, 20>>], __struct__: LXical.Document.Edit}}]>]
23:35:29.000 [info] Completion for LxPos<<35, 24>>
23:35:29.055 [info] Local completions are [%{name: "Chars", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Protocol, full_name: "List.Chars", summary: "The `List.Chars` protocol is responsible for\nconverting a structure to a charlist (only if applicable)."}, %{arity: 1, name: "__info__", type: :function, origin: "List", spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", metadata: %{builtin: true}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Provides runtime information about functions, macros, and other information\ndefined by the module.", visibility: :public, parens?: true, argument_names: ["atom"]}, %{arity: 1, name: "ascii_printable?", type: :function, origin: "List", spec: "@spec ascii_printable?(list(), 0) :: true\n@spec ascii_printable?([], limit) :: true when limit: :infinity | pos_integer()\n@spec ascii_printable?([...], limit) :: boolean() when limit: :infinity | pos_integer()", metadata: %{app: :elixir, defaults: 1, since: "1.6.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Checks if `list` is a charlist made only of printable ASCII characters.", visibility: :public, parens?: true, argument_names: ["list"]}, %{arity: 2, name: "ascii_printable?", type: :function, origin: "List", spec: "@spec ascii_printable?(list(), 0) :: true\n@spec ascii_printable?([], limit) :: true when limit: :infinity | pos_integer()\n@spec ascii_printable?([...], limit) :: boolean() when limit: :infinity | pos_integer()", metadata: %{app: :elixir, defaults: 1, since: "1.6.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Checks if `list` is a charlist made only of printable ASCII characters.", visibility: :public, parens?: true, argument_names: ["list", "limit"]}, %{arity: 2, name: "delete", type: :function, origin: "List", spec: "@spec delete([], any()) :: []\n@spec delete([...], any()) :: list()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Deletes the given `element` from the `list`. Returns a new list without\nthe element.", visibility: :public, parens?: true, argument_names: ["list", "element"]}, %{arity: 2, name: "delete_at", type: :function, origin: "List", spec: "@spec delete_at(list(), integer()) :: list()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Produces a new list by removing the value at the specified `index`.", visibility: :public, parens?: true, argument_names: ["list", "index"]}, %{arity: 2, name: "duplicate", type: :function, origin: "List", spec: "@spec duplicate(any(), 0) :: []\n@spec duplicate(elem, pos_integer()) :: [elem, ...] when elem: var", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Duplicates the given element `n` times in a list.", visibility: :public, parens?: true, argument_names: ["elem", "n"]}, %{arity: 1, name: "first", type: :function, origin: "List", spec: "@spec first([], any()) :: any()\n@spec first([elem, ...], any()) :: elem when elem: var", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the first element in `list` or `default` if `list` is empty.", visibility: :public, parens?: true, argument_names: ["list"]}, %{arity: 2, name: "first", type: :function, origin: "List", spec: "@spec first([], any()) :: any()\n@spec first([elem, ...], any()) :: elem when elem: var", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the first element in `list` or `default` if `list` is empty.", visibility: :public, parens?: true, argument_names: ["list", "default"]}, %{arity: 1, name: "flatten", type: :function, origin: "List", spec: "@spec flatten(deep_list) :: list() when deep_list: [any() | deep_list]", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Flattens the given `list` of nested lists.", visibility: :public, parens?: true, argument_names: ["list"]}, %{arity: 2, name: "flatten", type: :function, origin: "List", spec: "@spec flatten(deep_list, [elem]) :: [elem] when deep_list: [elem | deep_list], elem: var", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Flattens the given `list` of nested lists.\nThe list `tail` will be added at the end of\nthe flattened list.", visibility: :public, parens?: true, argument_names: ["list", "tail"]}, %{arity: 3, name: "foldl", type: :function, origin: "List", spec: "@spec foldl([elem], acc, (elem, acc -> acc)) :: acc when elem: var, acc: var", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Folds (reduces) the given list from the left with\na function. Requires an accumulator, which can be any value.", visibility: :public, parens?: true, argument_names: ["list", "acc", "fun"]}, %{arity: 3, name: "foldr", type: :function, origin: "List", spec: "@spec foldr([elem], acc, (elem, acc -> acc)) :: acc when elem: var, acc: var", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Folds (reduces) the given list from the right with\na function. Requires an accumulator, which can be any value.", visibility: :public, parens?: true, argument_names: ["list", "acc", "fun"]}, %{arity: 1, name: "improper?", type: :function, origin: "List", spec: "@spec improper?(maybe_improper_list()) :: boolean()", metadata: %{app: :elixir, since: "1.8.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns `true` if `list` is an improper list. Otherwise returns `false`.", visibility: :public, parens?: true, argument_names: ["list"]}, %{arity: 3, name: "insert_at", type: :function, origin: "List", spec: "@spec insert_at(list(), integer(), any()) :: list()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns a list with `value` inserted at the specified `index`.", visibility: :public, parens?: true, argument_names: ["list", "index", "value"]}, %{arity: 3, name: "keydelete", type: :function, origin: "List", spec: "@spec keydelete([tuple()], any(), non_neg_integer()) :: [tuple()]", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Receives a `list` of tuples and deletes the first tuple\nwhere the element at `position` matches the\ngiven `key`. Returns the new list.", visibility: :public, parens?: true, argument_names: ["list", "key", "position"]}, %{arity: 3, name: "keyfind", type: :function, origin: "List", spec: "@spec keyfind([tuple()], any(), non_neg_integer(), any()) :: any()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Receives a list of tuples and returns the first tuple\nwhere the element at `position` in the tuple matches the\ngiven `key`.", visibility: :public, parens?: true, argument_names: ["list", "key", "position"]}, %{arity: 4, name: "keyfind", type: :function, origin: "List", spec: "@spec keyfind([tuple()], any(), non_neg_integer(), any()) :: any()", metadata: %{app: :elixir, defaults: 1}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Receives a list of tuples and returns the first tuple\nwhere the element at `position` in the tuple matches the\ngiven `key`.", visibility: :public, parens?: true, argument_names: ["list", "key", "position", "default"]}, %{arity: 3, name: "keyfind!", type: :function, origin: "List", spec: "@spec keyfind!([tuple()], any(), non_neg_integer()) :: any()", metadata: %{app: :elixir, since: "1.13.0"}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Receives a list of tuples and returns the first  (truncated)
23:35:29.120 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "Chars", kind: :module, detail: "The `List.Chars` protocol is responsible for\nconverting a structure to a charlist (only if applicable).", sort_text: "0001_Chars", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 242,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "Chars", range: LxRange[<<35, 24>>...<<35, 24>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "__info__(atom)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Provides runtime information about functions, macros, and other information\ndefined by the module.\n```elixir\n@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()\n```", kind: :markdown]>, detail: "(function)", filter_text: "__info__", insert_text_format: :snippet, sort_text: "0309_info__ 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 242,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "__info__", range: LxRange[<<35, 24>>...<<35, 24>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "ascii_printable?(list)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Checks if `list` is a charlist made only of printable ASCII characters.\n```elixir\n@spec ascii_printable?(list(), 0) :: true\n@spec ascii_printable?([], limit) :: true when limit: :infinity | pos_integer()\n@spec ascii_printable?([...], limit) :: boolean() when limit: :infinity | pos_integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "ascii_printable?", insert_text_format: :snippet, sort_text: "0301_ascii_printable? 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 242,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "ascii_printable?", range: LxRange[<<35, 24>>...<<35, 24>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "ascii_printable?(list, limit)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Checks if `list` is a charlist made only of printable ASCII characters.\n```elixir\n@spec ascii_printable?(list(), 0) :: true\n@spec ascii_printable?([], limit) :: true when limit: :infinity | pos_integer()\n@spec ascii_printable?([...], limit) :: boolean() when limit: :infinity | pos_integer()\n```", kind: :markdown]>, detail: "(function)", filter_text: "ascii_printable?", insert_text_format: :snippet, sort_text: "0301_ascii_printable? 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 242,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(43 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "ascii_printable?", range: LxRange[<<35, 24>>...<<35, 24>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "delete(list, element)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Deletes the given `element` from the `list`. Returns a new list without\nthe element.\n```elixir\n@spec delete([], any()) :: []\n@spec delete([...], any()) :: list()\n```", kind: :markdown]>, detail: "(function)", filter_text: "delete", insert_text_format: :snippet, sort_text: "0301_delete 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 242,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file: (truncated)
23:35:30.438 [info] Compiled aoc2024 in 2 ms
23:35:37.981 [info] Compiled aoc2024 in 2 ms
23:36:11.849 [info] Completion for LxPos<<21, 12>>
23:36:11.873 [info] Local completions are []
23:36:11.873 [info] Emitting completions: []
23:36:11.881 [info] Completion for LxPos<<21, 11>>
23:36:11.905 [info] Local completions are []
23:36:11.905 [info] Emitting completions: []
23:36:11.912 [info] Completion for LxPos<<21, 10>>
23:36:11.934 [info] Local completions are []
23:36:11.934 [info] Emitting completions: []
23:36:11.943 [info] Completion for LxPos<<21, 9>>
23:36:11.968 [info] Local completions are []
23:36:11.968 [info] Emitting completions: []
23:36:12.192 [info] Completion for LxPos<<21, 8>>
23:36:12.218 [info] Local completions are [%{arity: 1, name: "read_input", type: :function, origin: "Aoc2024.Day02.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}]
23:36:12.220 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "read_input(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "read_input", insert_text_format: :snippet, sort_text: "0201_read_input 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 253,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(39 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "read_input", range: LxRange[<<21, 5>>...<<21, 8>>], __struct__: LXical.Document.Edit}}]>]
23:36:34.226 [info] Response %{error: nil, id: 42, result: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 269,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day02.Solution do..."(39 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: []}, __struct__: LXical.Protocol.Responses.Formatting}
23:36:35.531 [info] Compiled aoc2024 in 2 ms
23:38:04.673 [info] opened file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs
23:38:08.356 [info] Completion for LxPos<<23, 11>>
23:38:08.364 [info] Local completions are []
23:38:08.364 [info] Emitting completions: []
23:38:08.589 [info] Completion for LxPos<<23, 12>>
23:38:08.597 [info] Local completions are []
23:38:08.597 [info] Emitting completions: []
23:38:08.929 [info] Completion for LxPos<<23, 13>>
23:38:08.937 [info] Local completions are []
23:38:08.937 [info] Emitting completions: []
23:38:09.002 [info] Completion for LxPos<<23, 14>>
23:38:09.010 [info] Local completions are []
23:38:09.010 [info] Emitting completions: []
23:38:09.104 [info] Completion for LxPos<<23, 15>>
23:38:09.111 [info] Local completions are []
23:38:09.111 [info] Emitting completions: []
23:38:09.553 [info] Completion for LxPos<<23, 14>>
23:38:09.562 [info] Local completions are []
23:38:09.562 [info] Emitting completions: []
23:38:09.643 [info] Completion for LxPos<<23, 15>>
23:38:09.651 [info] Local completions are []
23:38:09.651 [info] Emitting completions: []
23:38:12.224 [info] Completion for LxPos<<32, 11>>
23:38:12.232 [info] Local completions are []
23:38:12.232 [info] Emitting completions: []
23:38:12.445 [info] Completion for LxPos<<32, 12>>
23:38:12.469 [info] Local completions are [%{arity: 2, name: "-", type: :function, origin: "Aoc2024.Day01.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["part", "file_path"]}, %{arity: 1, name: "-", type: :function, origin: "Kernel", spec: "@spec -0 :: 0\n@spec -pos_integer() :: neg_integer()\n@spec -neg_integer() :: pos_integer()\n@spec -float() :: float()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Arithmetic negative unary operator.", visibility: :public, parens?: true, argument_names: ["value"]}, %{arity: 2, name: "-", type: :function, origin: "Kernel", spec: "@spec integer() - integer() :: integer()\n@spec float() - float() :: float()\n@spec integer() - float() :: float()\n@spec float() - integer() :: float()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Arithmetic subtraction operator.", visibility: :public, parens?: true, argument_names: ["left", "right"]}, %{arity: 2, name: "--", type: :function, origin: "Kernel", spec: "@spec list() -- list() :: list()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "List subtraction operator. Removes the first occurrence of an element\non the left list for each element on the right.", visibility: :public, parens?: true, argument_names: ["left", "right"]}]
23:38:12.479 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "-(part, file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "-", insert_text_format: :snippet, sort_text: "0201_- 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 11,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "-", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "-(value)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Arithmetic negative unary operator.\n```elixir\n@spec -0 :: 0\n@spec -pos_integer() :: neg_integer()\n@spec -neg_integer() :: pos_integer()\n@spec -float() :: float()\n```", kind: :markdown]>, detail: "(function)", filter_text: "-", insert_text_format: :snippet, sort_text: "0401_- 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 11,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "-", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "-(left, right)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Arithmetic subtraction operator.\n```elixir\n@spec integer() - integer() :: integer()\n@spec float() - float() :: float()\n@spec integer() - float() :: float()\n@spec float() - integer() :: float()\n```", kind: :markdown]>, detail: "(function)", filter_text: "-", insert_text_format: :snippet, sort_text: "0401_- 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 11,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "-", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "--(left, right)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "List subtraction operator. Removes the first occurrence of an element\non the left list for each element on the right.\n```elixir\n@spec list() -- list() :: list()\n```", kind: :markdown]>, detail: "(function)", filter_text: "--", insert_text_format: :snippet, sort_text: "0401_-- 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 11,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "--", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>]
23:38:13.040 [info] Completion for LxPos<<32, 12>>
23:38:13.062 [info] Local completions are [%{arity: 2, name: "-", type: :function, origin: "Aoc2024.Day01.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["part", "file_path"]}, %{arity: 1, name: "-", type: :function, origin: "Kernel", spec: "@spec -0 :: 0\n@spec -pos_integer() :: neg_integer()\n@spec -neg_integer() :: pos_integer()\n@spec -float() :: float()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Arithmetic negative unary operator.", visibility: :public, parens?: true, argument_names: ["value"]}, %{arity: 2, name: "-", type: :function, origin: "Kernel", spec: "@spec integer() - integer() :: integer()\n@spec float() - float() :: float()\n@spec integer() - float() :: float()\n@spec float() - integer() :: float()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Arithmetic subtraction operator.", visibility: :public, parens?: true, argument_names: ["left", "right"]}, %{arity: 2, name: "--", type: :function, origin: "Kernel", spec: "@spec list() -- list() :: list()", metadata: %{app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "List subtraction operator. Removes the first occurrence of an element\non the left list for each element on the right.", visibility: :public, parens?: true, argument_names: ["left", "right"]}]
23:38:13.072 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "-(part, file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "-", insert_text_format: :snippet, sort_text: "0201_- 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 13,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "-", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "-(value)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Arithmetic negative unary operator.\n```elixir\n@spec -0 :: 0\n@spec -pos_integer() :: neg_integer()\n@spec -neg_integer() :: pos_integer()\n@spec -float() :: float()\n```", kind: :markdown]>, detail: "(function)", filter_text: "-", insert_text_format: :snippet, sort_text: "0401_- 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 13,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "-", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "-(left, right)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Arithmetic subtraction operator.\n```elixir\n@spec integer() - integer() :: integer()\n@spec float() - float() :: float()\n@spec integer() - float() :: float()\n@spec float() - integer() :: float()\n```", kind: :markdown]>, detail: "(function)", filter_text: "-", insert_text_format: :snippet, sort_text: "0401_- 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 13,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "-", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "--(left, right)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "List subtraction operator. Removes the first occurrence of an element\non the left list for each element on the right.\n```elixir\n@spec list() -- list() :: list()\n```", kind: :markdown]>, detail: "(function)", filter_text: "--", insert_text_format: :snippet, sort_text: "0401_-- 002", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 13,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "--", range: LxRange[<<32, 11>>...<<32, 12>>], __struct__: LXical.Document.Edit}}]>]
23:38:16.812 [info] Emitting completions: []
23:38:17.187 [info] Emitting completions: []
23:38:17.508 [info] Emitting completions: []
23:38:17.583 [info] Emitting completions: []
23:38:17.620 [info] Emitting completions: []
23:38:18.782 [info] Completion for LxPos<<49, 28>>
23:38:18.793 [info] Local completions are [%{arity: 1, name: "part_one", type: :function, origin: "Aoc2024.Day01.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}, %{arity: 1, name: "part_two", type: :function, origin: "Aoc2024.Day01.Solution", spec: "", metadata: %{}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "", visibility: :public, parens?: true, argument_names: ["file_path"]}]
23:38:18.799 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "part_one(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "part_one", insert_text_format: :snippet, sort_text: "0301_part_one 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 24,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "part_one", range: LxRange[<<49, 24>>...<<49, 28>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "part_two(file_path)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "\n```elixir\n\n```", kind: :markdown]>, detail: "(function)", filter_text: "part_two", insert_text_format: :snippet, sort_text: "0301_part_two 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 24,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day01/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day01.Solution do..."(49 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "part_two", range: LxRange[<<49, 24>>...<<49, 28>>], __struct__: LXical.Document.Edit}}]>]
23:38:20.369 [info] Compiled aoc2024 in 2 ms
23:38:58.762 [error] Shutting down
23:38:58.765 [info] Compiled aoc2024 in 3 ms
23:38:58.767 [warn] Received an Exit notification. Halting the server in 150ms
23:38:58.767 [info] Child :timer_server of Supervisor :kernel_sup started
Pid: #PID<0.1630.0>
Start Call: :timer.start_link()
Restart: :permanent
Shutdown: 1000
Type: :worker
23:38:58.769 [error] stdio received :eof, server will stop.
23:38:58.770 [error] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor terminated
** (exit) normal
Pid: #PID<0.1554.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:38:58.770 [error] Child of Supervisor :standard_error_sup terminated
** (exit) :epipe
Pid: #PID<0.52.0>
Start Module: :standard_error
23:38:58.770 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1631.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:38:58.771 [error] GenServer :standard_error_sup terminating
** (stop) :epipe
Last message: {:EXIT, #PID<0.52.0>, :epipe}
State: {:state, :standard_error, :undefined, #PID<0.52.0>, {:local, :standard_error_sup}}
23:38:58.772 [error] Process :standard_error_sup (#PID<0.51.0>) terminating
** (exit) :epipe
    (stdlib 5.2.3.1) gen_server.erl:1226: :gen_server.handle_common_reply/8
    (stdlib 5.2.3.1) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: :standard_error.init/1
Ancestors: [:kernel_sup, #PID<0.47.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.49.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 610
Stack Size: 28
Reductions: 2205
23:38:58.772 [error] Child :standard_error of Supervisor :kernel_sup terminated
** (exit) :epipe
Pid: #PID<0.51.0>
Start Call: :standard_error.start_link()
Restart: :temporary
Shutdown: 2000
Type: :supervisor
23:38:58.771 [error] :gen_statem :user_drv terminating
** (MatchError) no match of right hand side value: {:error, :arguments}
    (kernel 9.2.4.2) user_drv.erl:464: :user_drv.server/3
    (stdlib 5.2.3.1) gen_statem.erl:1395: :gen_statem.loop_state_callback/11
    (stdlib 5.2.3.1) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Queue: [info: {#PID<0.70.0>, :set_unicode_state, false}]
Postponed: []
State: {:server, {:state, {:state, #Reference<0.670170793.4183949313.5296>, {#PID<0.69.0>, #Reference<0.670170793.4183818241.5300>}, {#PID<0.68.0>, #Reference<0.670170793.4183818241.5298>}, %{input: true, echo: false, tty: false, canon: false}, true, false, [], [], [], [], :undefined, 80, 24, false, "\e[H\e[2J", "\e[A", "\n", "\b", "\e[C", "\e[1I", "\e[J", false, false, "\e[6n", "\e\\[([0-9]+);([0-9]+)R", {:re_pattern, 0, 1, 0, <<69, 82, 67, 80, 94, 1, 0, 0, 16, 8, 0, 0, 1, 0, ...>>}}, #Reference<0.670170793.4183818241.5298>, #Reference<0.670170793.4183818241.5300>, false, :undefined, #PID<0.70.0>, #PID<0.70.0>, {:gr, 1, 0, #PID<0.70.0>, [{:group, 0, #PID<0.70.0>, {}}]}, {false, {[], []}}}}
Callback mode: :state_functions, state_enter: false
23:38:58.773 [error] Process :user_drv (#PID<0.66.0>) terminating
** (MatchError) no match of right hand side value: {:error, :arguments}
    (kernel 9.2.4.2) user_drv.erl:464: :user_drv.server/3
    (stdlib 5.2.3.1) gen_statem.erl:1395: :gen_statem.loop_state_callback/11
    (stdlib 5.2.3.1) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: :user_drv.init/1
Ancestors: [#PID<0.70.0>, #PID<0.65.0>, :kernel_sup, #PID<0.47.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.70.0>, #PID<0.68.0>]
Dictionary: [current_group: #PID<0.70.0>]
Trapping Exits: true
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 320859
Neighbours:
    :user_drv_writer (#PID<0.68.0>)
        Initial Call: :prim_tty.writer/1
        Current Call: :prim_tty.writer_loop/2
        Ancestors: [:user_drv, #PID<0.65.0>, :kernel_sup, #PID<0.47.0>]
        Message Queue Length: 0
        Links: [#PID<0.66.0>]
        Trapping Exits: false
        Status: :waiting
        Heap Size: 2586
        Stack Size: 8
        Reductions: 8979
        Current Stacktrace:
            (kernel 9.2.4.2) prim_tty.erl:548: :prim_tty.writer_loop/2
            (stdlib 5.2.3.1) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
23:42:45.134 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.119.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
23:42:45.134 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.118.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:42:45.134 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:42:45.134 [info] Application logger started at :nonode@nohost
23:42:45.773 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.1528.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
23:42:45.773 [info] Application runtime_tools started at :nonode@nohost
23:42:45.774 [info] Application erts started at :nonode@nohost
23:42:45.774 [info] Application lx_lexical_shared started at :nonode@nohost
23:42:45.774 [info] Application lx_lexical_test started at :nonode@nohost
23:42:45.775 [info] Child LXSnowflake.Generator of Supervisor #PID<0.1535.0> (Supervisor.Default) started
Pid: #PID<0.1536.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.775 [info] Application lx_snowflake started at :nonode@nohost
23:42:45.775 [info] Application lx_sourceror started at :nonode@nohost
23:42:45.775 [info] Application lx_common started at :nonode@nohost
23:42:45.776 [info] Application lx_elixir_sense started at :nonode@nohost
23:42:45.776 [info] Application jason started at :nonode@nohost
23:42:45.776 [info] Application logger_file_backend started at :nonode@nohost
23:42:45.776 [info] Application lx_path_glob started at :nonode@nohost
23:42:45.776 [info] Application lx_proto started at :nonode@nohost
23:42:45.776 [info] Application lx_protocol started at :nonode@nohost
23:42:45.787 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1549.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.790 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1550.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.790 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1551.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:42:45.790 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1552.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:42:45.790 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1553.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.790 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1554.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.790 [info] Application lx_server started at :nonode@nohost
23:42:45.806 [info] Starting project at uri file:///home/yoshi/source/aoc/aoc2024
23:42:45.819 [info] Child {LXical.Server.Project.Progress, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1556.0>
Start Call: LXical.Server.Project.Progress.start_link(%{__struct__: LXical.Project, entropy: 5967, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.823 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1557.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%{__struct__: LXical.Project, entropy: 5967, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:45.833 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.1560.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
23:42:45.834 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.1561.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
23:42:45.837 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.1562.0>
Start Call: :net_kernel.start_link(%{name: :"manager-aoc2024-5967@127.0.0.1", supervisor: :net_sup_dynamic, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 2000
Type: :worker
23:42:45.837 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.1559.0>
Start Call: :erl_distribution.start_link(%{name: :"manager-aoc2024-5967@127.0.0.1", supervisor: :net_sup_dynamic, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
23:42:46.352 [info] Child {LXical.Server.Project.Node, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1558.0>
Start Call: LXical.Server.Project.Node.start_link(%{__struct__: LXical.Project, entropy: 5967, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:46.358 [info] Child {LXical.Server.Project.Diagnostics, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1570.0>
Start Call: LXical.Server.Project.Diagnostics.start_link(%{__struct__: LXical.Project, entropy: 5967, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:46.361 [info] Child {LXical.Server.Project.Intelligence, "aoc2024"} of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1571.0>
Start Call: LXical.Server.Project.Intelligence.start_link(%{__struct__: LXical.Project, entropy: 5967, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:46.362 [info] Child LXical.Server.Project.SearchListener of Supervisor :"aoc2024::supervisor" started
Pid: #PID<0.1572.0>
Start Call: LXical.Server.Project.SearchListener.start_link(%{__struct__: LXical.Project, entropy: 5967, project_module: nil, mix_exs_uri: "file:///home/yoshi/source/aoc/aoc2024/mix.exs", mix_project?: true, root_uri: "file:///home/yoshi/source/aoc/aoc2024", env_variables: %{}, mix_env: nil, mix_target: nil})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:42:46.362 [info] Lexical Initialized
23:42:46.362 [info] opened file:///home/yoshi/source/aoc/aoc2024/lib/day02/solution.exs
23:42:46.448 [info] Compiled aoc2024 in 92 ms
23:42:53.969 [info] opened file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs
23:43:24.951 [info] Completion for LxPos<<11, 6>>
23:43:25.691 [info] Local completions are [%{arity: 0, name: "node", type: :function, origin: "Kernel", spec: "@spec node() :: node()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.", visibility: :public, parens?: true, argument_names: []}, %{arity: 1, name: "node", type: :function, origin: "Kernel", spec: "@spec node(pid() | reference() | port()) :: node()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.", visibility: :public, parens?: true, argument_names: ["arg"]}, %{arity: 1, name: "not", type: :function, origin: "Kernel", spec: "@spec not true :: false\n@spec not false :: true", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Strictly boolean \"not\" operator.", visibility: :public, parens?: true, argument_names: ["value"]}]
23:43:25.709 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "node()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.\n```elixir\n@spec node() :: node()\n```", kind: :markdown]>, detail: "(function)", filter_text: "node", insert_text_format: :snippet, sort_text: "0401_node 000", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 16,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(27 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "node()", range: LxRange[<<11, 5>>...<<11, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "node(arg)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.\n```elixir\n@spec node(pid() | reference() | port()) :: node()\n```", kind: :markdown]>, detail: "(function)", filter_text: "node", insert_text_format: :snippet, sort_text: "0401_node 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 16,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(27 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "node(${1:arg})", range: LxRange[<<11, 5>>...<<11, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "not(value)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Strictly boolean \"not\" operator.\n```elixir\n@spec not true :: false\n@spec not false :: true\n```", kind: :markdown]>, detail: "(function)", filter_text: "not", insert_text_format: :snippet, sort_text: "0401_not 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 16,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(27 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "not(${1:value})", range: LxRange[<<11, 5>>...<<11, 6>>], __struct__: LXical.Document.Edit}}]>]
23:43:31.450 [info] Completion for LxPos<<15, 6>>
23:43:31.478 [info] Local completions are [%{arity: 0, name: "node", type: :function, origin: "Kernel", spec: "@spec node() :: node()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.", visibility: :public, parens?: true, argument_names: []}, %{arity: 1, name: "node", type: :function, origin: "Kernel", spec: "@spec node(pid() | reference() | port()) :: node()", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.", visibility: :public, parens?: true, argument_names: ["arg"]}, %{arity: 1, name: "not", type: :function, origin: "Kernel", spec: "@spec not true :: false\n@spec not false :: true", metadata: %{guard: true, app: :elixir}, __struct__: LXical.RemoteControl.Completion.Candidate.Function, summary: "Strictly boolean \"not\" operator.", visibility: :public, parens?: true, argument_names: ["value"]}]
23:43:31.485 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "node()", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns an atom representing the name of the local node.\nIf the node is not alive, `:nonode@nohost` is returned instead.\n```elixir\n@spec node() :: node()\n```", kind: :markdown]>, detail: "(function)", filter_text: "node", insert_text_format: :snippet, sort_text: "0401_node 000", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 23,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(20 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "node()", range: LxRange[<<15, 5>>...<<15, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "node(arg)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Returns the node where the given argument is located.\nThe argument can be a PID, a reference, or a port.\nIf the local node is not alive, `:nonode@nohost` is returned.\n```elixir\n@spec node(pid() | reference() | port()) :: node()\n```", kind: :markdown]>, detail: "(function)", filter_text: "node", insert_text_format: :snippet, sort_text: "0401_node 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 23,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(20 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "node(${1:arg})", range: LxRange[<<15, 5>>...<<15, 6>>], __struct__: LXical.Document.Edit}}]>, #Protocol.Types.Completion.Item<[label: "not(value)", kind: :function, documentation: #Protocol.Types.Markup.Content<[value: "Strictly boolean \"not\" operator.\n```elixir\n@spec not true :: false\n@spec not false :: true\n```", kind: :markdown]>, detail: "(function)", filter_text: "not", insert_text_format: :snippet, sort_text: "0401_not 001", text_edit: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 23,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(20 lines)>,
        dirty?: true,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: %{text: "not(${1:value})", range: LxRange[<<15, 5>>...<<15, 6>>], __struct__: LXical.Document.Edit}}]>]
23:43:32.802 [info] Compiled aoc2024 in 3 ms
23:43:34.872 [info] Compiled aoc2024 in 2 ms
23:43:36.981 [info] Response %{error: nil, id: 4, result: %{__struct__: LXical.Document.Changes, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 25,
        path: "/home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        uri: "file:///home/yoshi/source/aoc/aoc2024/lib/day03/solution.exs",
        __struct__: LXical.Document,
        lines: %Lines<"defmodule Aoc2024.Day03.Solution do..."(20 lines)>,
        dirty?: false,
        language_id: "elixir-script"
      }

  Stacktrace:

    (elixir 1.17.3) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.3) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.3) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.3) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.3) lib/inspect.ex:287: Inspect.List.keyword/2

>, edits: []}, __struct__: LXical.Protocol.Responses.Formatting}
23:43:42.933 [info] Emitting completions: []
23:43:43.961 [info] Emitting completions: []
23:43:44.061 [info] Emitting completions: []
23:43:44.146 [info] Emitting completions: []
23:43:44.195 [info] Emitting completions: []
23:43:45.089 [info] Compiled aoc2024 in 2 ms
23:43:49.238 [info] Compiled aoc2024 in 3 ms
